<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://xlingyun.github.io/atom.xml" rel="self"/>
  <link href="http://xlingyun.github.io/"/>
  <updated>2017-04-26T01:57:15+08:00</updated>
  <id>http://xlingyun.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MVC架构模式分析与设计]]></title>
    <link href="http://xlingyun.github.io/blog/20170425/jia-gou-mo-shi-fen-xi-yu-she-ji/"/>
    <updated>2017-04-25T21:53:50+08:00</updated>
    <id>http://xlingyun.github.io/blog/20170425/jia-gou-mo-shi-fen-xi-yu-she-ji</id>
    <content type="html"><![CDATA[<h3>MVC简介</h3>

<h4>书面解释</h4>

<p>MVC全名是Model View Controller，是模型(model)-视图(view)-控制器(controller)的缩写，一种软件设计典范，用一种业务逻辑和数据显示分离的方法组织代码，将业务逻辑被聚集到一个部件里面，在界面和用户围绕数据的交互能被改进和个性化定制的同时而不需要重新编写业务逻辑。</p>

<p><img src="http://oot79f1a9.bkt.clouddn.com/WX20170425-220721.png" alt="mvc的优势" /></p>

<h4>MVC工作流程</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1"># testController.class.php控制器文件</span>
</span><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">testController</span><span class="p">{</span>
</span><span class='line'>        <span class="c1"># 控制器的作用是调用模型，并调用视图，将模型产生的数据传递给视图，并让相关视图去显示</span>
</span><span class='line'>        <span class="k">function</span> <span class="nf">show</span><span class="p">(){</span>
</span><span class='line'>            <span class="nv">$testModel</span> <span class="o">=</span> <span class="nx">M</span><span class="p">(</span><span class="s1">&#39;test&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="nv">$data</span> <span class="o">=</span> <span class="nv">$testModel</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span><span class='line'>            <span class="nv">$testView</span> <span class="o">=</span> <span class="nx">V</span><span class="p">(</span><span class="s1">&#39;test&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="nv">$testView</span><span class="o">-&gt;</span><span class="na">display</span><span class="p">(</span><span class="nv">$data</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1"># testModel.class.php 模型文件</span>
</span><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">testModle</span><span class="p">{</span>
</span><span class='line'>        <span class="c1"># 模型的作用是获取数据并处理，返回数据</span>
</span><span class='line'>        <span class="k">function</span> <span class="nf">get</span><span class="p">(){</span>
</span><span class='line'>            <span class="k">return</span> <span class="s2">&quot;hello world&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1"># testView.class.php 视图文件</span>
</span><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">testView</span><span class="p">{</span>
</span><span class='line'>        <span class="c1"># 视图的作用是将取得的数据进行组织、美化等，并最终向用户终端输出</span>
</span><span class='line'>        <span class="k">function</span> <span class="nf">display</span><span class="p">(</span><span class="nv">$data</span><span class="p">){</span>
</span><span class='line'>            <span class="k">echo</span> <span class="nv">$data</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="sd">/********************************************************</span>
</span><span class='line'><span class="sd"> test.php</span>
</span><span class='line'><span class="sd"> require引入有误会报错，include引入有误报警告</span>
</span><span class='line'><span class="sd"> 推荐使用require_once</span>
</span><span class='line'><span class="sd">   - 第一步 浏览者 --&gt; 调用控制器，对他发出指令</span>
</span><span class='line'><span class="sd">   - 第二步 控制器 --&gt; 按指令选取一个合适的模型</span>
</span><span class='line'><span class="sd">   - 第三步 模型 --&gt; 按控制器指令取相应数据</span>
</span><span class='line'><span class="sd">   - 第四步 控制器 --&gt; 按指令选取相应视图</span>
</span><span class='line'><span class="sd">   - 第五步 视图 --&gt; 把第三步取到的数据按用户想要的样式显示出来</span>
</span><span class='line'><span class="sd">*********************************************************/</span>
</span><span class='line'><span class="k">require_once</span><span class="p">(</span><span class="s1">&#39;testController.class.php&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">require_once</span><span class="p">(</span><span class="s1">&#39;testModel.class.php&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">require_once</span><span class="p">(</span><span class="s1">&#39;testView.class.php&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$testController</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">testController</span><span class="p">();</span>
</span><span class='line'><span class="nv">$testController</span><span class="o">-&gt;</span><span class="na">show</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<h4>目录规范</h4>

<p><img src="http://oot79f1a9.bkt.clouddn.com/WX20170425-224500.png" alt="目录规范" /></p>

<h4>建立一个控制器调用函数C</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1">#####################################################################</span>
</span><span class='line'><span class="c1"># eval()函数调用简单但是不安全</span>
</span><span class='line'><span class="c1"># eval(&#39;$obj = new &#39;.$name.&#39;Controller();$obj-&gt;&#39;.$method.&#39;();&#39;);</span>
</span><span class='line'><span class="c1"># 可用下面代码代替</span>
</span><span class='line'><span class="c1"># $controller = $name.&#39;controller&#39;;</span>
</span><span class='line'><span class="c1"># $obj = new $controller();</span>
</span><span class='line'><span class="c1"># $obj -&gt; $method();</span>
</span><span class='line'><span class="c1">#####################################################################</span>
</span><span class='line'>
</span><span class='line'><span class="k">function</span> <span class="nf">C</span><span class="p">(</span><span class="nv">$name</span><span class="p">,</span> <span class="nv">$method</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">require_once</span><span class="p">(</span><span class="s1">&#39;libs/Controller/&#39;</span><span class="o">.</span><span class="nv">$name</span><span class="o">.</span><span class="s1">&#39;Controller.class.php&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="c1"># eval 内置函数 把字符串转换为可执行的PHP语句</span>
</span><span class='line'>    <span class="k">eval</span><span class="p">(</span><span class="s1">&#39;$obj = new &#39;</span><span class="o">.</span><span class="nv">$name</span><span class="o">.</span><span class="s1">&#39;Controller();$obj-&gt;&#39;</span><span class="o">.</span><span class="nv">$method</span><span class="o">.</span><span class="s1">&#39;();&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1"># 调用</span>
</span><span class='line'><span class="nx">C</span><span class="p">(</span><span class="s1">&#39;test&#39;</span><span class="p">,</span> <span class="s1">&#39;show&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#### 建立一个模型调用函数M</span>
</span><span class='line'><span class="k">function</span> <span class="nf">M</span><span class="p">(</span><span class="nv">$name</span><span class="p">){</span>
</span><span class='line'>    <span class="k">require_once</span><span class="p">(</span><span class="s1">&#39;libs/Model/&#39;</span><span class="o">.</span><span class="nv">$name</span><span class="o">.</span><span class="s1">&#39;Model.class.php&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">eval</span><span class="p">(</span><span class="s1">&#39;$obj = new &#39;</span><span class="o">.</span><span class="nv">$name</span><span class="o">.</span><span class="s1">&#39;Model();&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$obj</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#### 建立一个视图调用函数V</span>
</span><span class='line'><span class="k">function</span> <span class="nf">V</span><span class="p">(</span><span class="nv">$name</span><span class="p">){</span>
</span><span class='line'>    <span class="k">require_once</span><span class="p">(</span><span class="s1">&#39;libs/View/&#39;</span><span class="o">.</span><span class="nv">$name</span><span class="o">.</span><span class="s1">&#39;View.class.php&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">eval</span><span class="p">(</span><span class="s1">&#39;$obj = new &#39;</span><span class="o">.</span><span class="nv">$name</span><span class="o">.</span><span class="s1">&#39;View();&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$obj</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 默认地，PHP 对所有的 GET、POST 和 COOKIE 数据自动运行 addslashes()。所以您不应对已转义过的字符串使用 addslashes()，因为这样会导致双层转义。遇到这种情况时可以使用函数 get_magic_quotes_gpc() 进行检测</span>
</span><span class='line'>
</span><span class='line'><span class="k">function</span> <span class="nf">daddslashes</span><span class="p">(</span><span class="nv">$str</span><span class="p">){</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="o">!</span><span class="nb">get_magic_quotes_gpc</span><span class="p">())</span> <span class="o">?</span> <span class="nb">addslashes</span><span class="p">(</span><span class="nv">$str</span><span class="p">)</span> <span class="o">:</span> <span class="nv">$str</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>入口文件的改造与功能总结</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1"># index.php 入口文件</span>
</span><span class='line'><span class="k">require_once</span><span class="p">(</span><span class="s1">&#39;function.php&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$controllerAllow</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;test&#39;</span><span class="p">,</span> <span class="s1">&#39;index&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$methodAllow</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;test&#39;</span><span class="p">,</span> <span class="s1">&#39;index&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$controller</span> <span class="o">=</span> <span class="nb">in_array</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;controller&#39;</span><span class="p">],</span> <span class="nv">$controllerAllow</span><span class="p">)</span> <span class="o">?</span> <span class="nx">daddslashes</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;controller&#39;</span><span class="p">])</span> <span class="o">:</span> <span class="s1">&#39;index&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$method</span> <span class="o">=</span> <span class="nb">in_array</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;method&#39;</span><span class="p">],</span> <span class="nv">$methodAllow</span><span class="p">)</span> <span class="o">?</span> <span class="nx">daddslashes</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;method&#39;</span><span class="p">])</span> <span class="o">:</span> <span class="s1">&#39;index&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">C</span><span class="p">(</span><span class="nv">$controller</span><span class="p">,</span> <span class="nv">$method</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h4>什么是好的视图引擎</h4>

<ul>
<li>基于该引擎开发出的模版要更贴近标准的html等</li>
<li>语法简单易懂</li>
<li>良好的缓存机制</li>
<li>扩展性良好</li>
<li>网络资源多</li>
</ul>


<h4>Smarty</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">require</span><span class="p">(</span><span class="s1">&#39;../Smarty.class.php&#39;</span><span class="p">);</span> <span class="c1">//引入smarty</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$smarty</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Smarty</span><span class="p">();</span>
</span><span class='line'><span class="c1">//Smarty的 五个配置两个方法</span>
</span><span class='line'><span class="nv">$smarty</span><span class="o">-&gt;</span><span class="na">left_delimiter</span> <span class="o">=</span> <span class="s2">&quot;{&quot;</span><span class="p">;</span><span class="c1">//左定界符</span>
</span><span class='line'><span class="nv">$smarty</span><span class="o">-&gt;</span><span class="na">right</span><span class="o">-</span><span class="nx">delimiter</span> <span class="o">=</span> <span class="s2">&quot;}&quot;</span><span class="p">;</span><span class="c1">//右定界符</span>
</span><span class='line'><span class="nv">$smarty</span><span class="o">-&gt;</span><span class="na">template_dir</span> <span class="o">=</span> <span class="s2">&quot;tpl&quot;</span><span class="p">;</span><span class="c1">//html模版的地址</span>
</span><span class='line'><span class="nv">$smarty</span><span class="o">-&gt;</span><span class="na">compile_dir</span> <span class="o">=</span> <span class="s2">&quot;template_c&quot;</span><span class="p">;</span><span class="c1">//模版编译生成的文件</span>
</span><span class='line'><span class="nv">$smarty</span><span class="o">-&gt;</span><span class="na">cache_dir</span> <span class="o">=</span> <span class="s2">&quot;cache&quot;</span><span class="c1">//缓存</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//以下是开启缓存的另外两个配置。因为通常不用smarty的缓存机制，所以此项为了了解  </span>
</span><span class='line'><span class="nv">$smarty</span><span class="o">-&gt;</span><span class="na">caching</span> <span class="o">=</span> <span class="k">true</span><span class="p">;</span> <span class="c1">//开启缓存</span>
</span><span class='line'><span class="nv">$smarty</span><span class="o">-&gt;</span><span class="na">cache_lifetime</span> <span class="o">=</span> <span class="mi">120</span><span class="p">;</span> <span class="c1">//缓存时间</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$smarty</span><span class="o">-&gt;</span><span class="na">assign</span><span class="p">(</span><span class="s1">&#39;articletitle&#39;</span><span class="p">,</span> <span class="s1">&#39;文章标题&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$smarty</span><span class="o">-&gt;</span><span class="na">display</span><span class="p">(</span><span class="s1">&#39;test.tpl&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h4>smarty的注释与变量输出</h4>

<ol>
<li><code>{* 这里是注释语句 *}</code></li>
<li>如何在smarty里面输出赋值进来的变量</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1"># index.php</span>
</span><span class='line'><span class="c1">#$smarty-&gt;arrign(&#39;articletitle&#39;, &#39;文章标题&#39;);</span>
</span><span class='line'><span class="nv">$arr1</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;title&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;smarty的学习&#39;</span><span class="p">,</span><span class="s1">&#39;author&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;小明&#39;</span><span class="p">);</span>
</span><span class='line'><span class="c1">#$arr2 = array(&#39;articlecontent&#39;=&gt;array(&#39;title&#39;=&gt;&#39;smarty的学习&#39;,&#39;author&#39;=&gt;&#39;小明&#39;));</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$smarty</span> <span class="o">=</span> <span class="nx">assign</span><span class="p">(</span><span class="s1">&#39;arr&#39;</span><span class="p">,</span> <span class="nv">$arr1</span><span class="p">);</span>
</span><span class='line'><span class="c1"># test.tpl</span>
</span><span class='line'><span class="p">{</span><span class="o">*</span> <span class="p">{</span><span class="nx">articletitle</span><span class="p">}</span> <span class="o">*</span><span class="p">}</span>
</span><span class='line'><span class="p">{</span><span class="nv">$arr1</span><span class="o">.</span><span class="nx">title</span><span class="p">}</span><span class="o">---</span><span class="p">{</span><span class="nv">$arr1</span><span class="o">.</span><span class="nx">author</span><span class="p">}</span>
</span><span class='line'><span class="p">{</span><span class="o">*</span> <span class="p">{</span><span class="nv">$arr2</span><span class="p">[</span><span class="s1">&#39;articlecontent&#39;</span><span class="p">][</span><span class="s1">&#39;title&#39;</span><span class="p">]}</span> <span class="o">--</span> <span class="p">{</span><span class="nv">$arr2</span><span class="p">[</span><span class="s1">&#39;articlecontent&#39;</span><span class="p">][</span><span class="s1">&#39;author&#39;</span><span class="p">]}</span> <span class="o">*</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>变量调节器</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="mi">1</span> <span class="nx">首字母大写capitalize</span>
</span><span class='line'><span class="c1">## 示例：{$articleTitle | capitalize}  </span>
</span><span class='line'><span class="mi">2</span> <span class="nx">字符串连接</span> <span class="nx">cat</span>
</span><span class='line'><span class="c1">## 示例：{$articleTitle | cat:&quot; yesterday.&quot;}  </span>
</span><span class='line'><span class="mi">3</span> <span class="nx">日期格式化</span> <span class="nb">date_format</span>
</span><span class='line'><span class="c1">## 示例：{$yesterday | date_format}  </span>
</span><span class='line'>     <span class="p">{</span><span class="nv">$yesterday</span> <span class="o">|</span> <span class="nb">date_format</span><span class="o">:</span><span class="s2">&quot;:&quot;</span><span class="o">%</span><span class="nx">A</span><span class="p">,</span><span class="o">%</span><span class="nx">B</span> <span class="o">%</span><span class="nx">e</span><span class="p">,</span><span class="o">%</span><span class="nx">Y</span> <span class="o">%</span><span class="nx">H</span><span class="o">:%</span><span class="nx">M</span><span class="o">:%</span><span class="nx">S</span><span class="p">}</span>
</span><span class='line'><span class="mi">4</span> <span class="nx">为未赋值或为空的变量指定默认值default</span>
</span><span class='line'><span class="c1">## 示例：{$articleTitle|default:&quot;no title&quot;}  </span>
</span><span class='line'><span class="mi">5</span> <span class="nx">转码</span> <span class="nx">escape</span>
</span><span class='line'><span class="c1">## 用于html转码，URL转码，在没有转码的变量上转换单引号，十六进制转码，十六进制美化，或者javascript转码，默认是html转码。  </span>
</span><span class='line'><span class="mi">6</span> <span class="nx">小写</span> <span class="nx">lower</span> <span class="nx">大写</span> <span class="nx">upper</span>
</span><span class='line'><span class="c1">## 示例：{$articleTitle|lower}  {$article|upper}  </span>
</span><span class='line'><span class="mi">7</span> <span class="nx">所有的换行符将被替换成</span> <span class="sb">`&lt;br /&gt;`</span> <span class="nx">nl2br功能同PHP中的nl2br</span><span class="p">()</span><span class="nx">函数一样</span>
</span><span class='line'><span class="c1">## 示例：{$articleTitle|nl2br}  </span>
</span><span class='line'><span class="mi">8</span> <span class="nx">其他的函数</span>
</span><span class='line'><span class="c1">## 可以参见手册，原则上应该通过PHP直接处理完再赋值到smarty变量里，少用smarty函数   </span>
</span><span class='line'><span class="c1">## 例如：Wordwrap 行宽 -&gt; 使用css样式来解决俄 truncate  </span>
</span><span class='line'><span class="c1">## 截取 -&gt; 使用PHP来截取，或使用css样式来解决  </span>
</span></code></pre></td></tr></table></div></figure>


<h4>Smarty中的条件判断</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='smarty'><span class='line'><span class="x"># 1 基本句式</span>
</span><span class='line'><span class="cp">{</span><span class="nf">if</span> <span class="nv">$name</span> <span class="na">eq</span> <span class="s2">&quot;Fred&quot;</span><span class="cp">}</span><span class="x"></span>
</span><span class='line'><span class="x"> Welcome Sir.</span>
</span><span class='line'><span class="cp">{</span><span class="nf">elseif</span> <span class="nv">$name</span> <span class="na">eq</span> <span class="s2">&quot;Wilma&quot;</span><span class="cp">}</span><span class="x"></span>
</span><span class='line'><span class="x"> Welcome Ma&#39;am</span>
</span><span class='line'><span class="cp">{</span><span class="nf">else</span><span class="cp">}</span><span class="x"></span>
</span><span class='line'><span class="x"> Welcome, whatever you are.</span>
</span><span class='line'><span class="cp">{</span><span class="nf">/if</span><span class="cp">}</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="x"># 2 条件修饰符有很多，简单的几个eq(==) neq(!=) gt(&gt;) lt(&lt;)</span>
</span><span class='line'><span class="x"># 3 修饰词时必须和变量或常量用空格隔开</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Smarty的循环 section</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='smarty'><span class='line'><span class="x">1 section sectionelse</span>
</span><span class='line'><span class="x">### 功能多，参数多。但是个人觉得并不实用，是smarty用来做循环操作的函数之一</span>
</span><span class='line'><span class="x">2 了解基本属性name和loop</span>
</span><span class='line'><span class="x">3 除了name和loop属性外，还有以下属性</span>
</span><span class='line'><span class="x">    start 循环执行的初始位置。如果该值为负数，开始位置从数组的尾部算起。</span>
</span><span class='line'><span class="x">          例如：如果数组中有7个元素，指定start-2，那么指定当前数组的索引为5.</span>
</span><span class='line'><span class="x">          非法值（超过了循环数组的下限）将被自动调整为最接近的合法值。</span>
</span><span class='line'><span class="x">    step  该值决定循环的步长，例如指定step=2将只遍历下标为0 2 4等的元素。</span>
</span><span class='line'><span class="x">          如果step为负值，那么遍历数组的时候从后向前遍历。</span>
</span><span class='line'><span class="x">    max   设定循环最大执行次数</span>
</span><span class='line'><span class="x">    show  决定是否显示该循环</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Smarty的循环 foreach</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='smarty'><span class='line'><span class="x">1 foreach用于处理简单数组（数组中的元素的类型一致），它的格式比section简单许多，</span>
</span><span class='line'><span class="x">  缺点是智能处理简单数组，但是推荐用这个，因为和PHP的语法更接近，容易掌握。错误率低</span>
</span><span class='line'><span class="x">2 foreach在smarty 3里，它可以像PHP一样使用了。</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Smarty的文件引用</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='smarty'><span class='line'><span class="x">1 include用法和PHP里的include差不多</span>
</span><span class='line'><span class="x">2 smarty的include还具备自定义属性的功能</span>
</span><span class='line'><span class="x">  例如</span><span class="cp">{</span><span class="nf">include</span> <span class="na">file</span><span class="o">=</span><span class="s2">&quot;header.tpl&quot;</span> <span class="na">title</span><span class="o">=</span><span class="s2">&quot;网站标题&quot;</span> <span class="na">table_bgcolor</span><span class="o">=</span><span class="s2">&quot;#c0c0c0&quot;</span><span class="cp">}</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<h4>Smarty类与对象的赋值与使用</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='smarty'><span class='line'><span class="x">类的调用方法：</span>
</span><span class='line'><span class="x">第一种是用smarty的register_object方法，在Smarty3里已经废除。</span>
</span><span class='line'><span class="x">第二种方法就是使用assign把一个类的对象以变量的形式赋值到smarty模版里使用。</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Smarty函数的使用</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='smarty'><span class='line'><span class="x">1 可以使用PHP内置函数</span>
</span><span class='line'><span class="x">  </span><span class="cp">{</span><span class="c">* ‘|’前是函数的第一个参数‘：’后是第二个参数 *</span><span class="cp">}</span><span class="x"></span>
</span><span class='line'><span class="x">  </span><span class="cp">{</span><span class="s2">&quot;Y-m-d&quot;</span><span class="o">|</span><span class="na">date</span><span class="o">:</span><span class="nv">$time</span><span class="cp">}</span><span class="x"></span>
</span><span class='line'><span class="x">2 可以自定义函数，并用registerPlugin注册到smarty模版里使用。  </span>
</span><span class='line'><span class="x">  registerPlugin的第一个参数除了function，还有modifier block等</span>
</span><span class='line'>
</span><span class='line'><span class="x">  </span><span class="cp">{</span><span class="c">* 传入的参数1值为abc，传入的参数2值为edf *</span><span class="cp">}</span><span class="x"></span>
</span><span class='line'><span class="x">  </span><span class="cp">{</span><span class="nf">f_test</span> <span class="na">p1</span><span class="o">=</span><span class="s2">&quot;abc&quot;</span> <span class="na">p2</span><span class="o">=</span><span class="s2">&quot;edf&quot;</span><span class="cp">}</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="x">  function test($params)</span><span class="cp">{</span>
</span><span class='line'>    <span class="o">{*</span> <span class="na">print_r</span><span class="o">(</span><span class="nv">$params</span><span class="o">)</span>  <span class="o">//</span><span class="na">Array</span><span class="o">([</span><span class="na">p1</span><span class="o">]=&gt;</span><span class="na">abc</span> <span class="o">[</span><span class="na">p2</span><span class="o">]=&gt;</span><span class="na">edf</span><span class="o">)</span> <span class="o">*</span><span class="cp">}</span><span class="x"></span>
</span><span class='line'><span class="x">    $p1 = $params[&#39;p1&#39;];</span>
</span><span class='line'><span class="x">    $p2 = $params[&#39;p2&#39;];</span>
</span><span class='line'><span class="x">    return &#39;传入的参数1值为&#39;.$p1.&#39;,传入的参数2值为&#39;.$p2;</span>
</span><span class='line'><span class="x">  }</span>
</span><span class='line'>
</span><span class='line'><span class="x">  $smarty-&gt;registerPlugin(&#39;function&#39;,&#39;f_test&#39;, &#39;test&#39;);</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Smarty插件</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='smarty'><span class='line'><span class="x">1 什么是Smarty的插件：</span>
</span><span class='line'><span class="x">  Smarty的插件本质上是function函数</span>
</span><span class='line'>
</span><span class='line'><span class="x">2 Smarty插件常用类型：</span>
</span><span class='line'><span class="x">  functions 函数插件</span>
</span><span class='line'><span class="x">  文件名格式：function.函数名称.php</span>
</span><span class='line'><span class="x">  文件格式：smarty_function_插件名</span>
</span><span class='line'><span class="x">  function smarty_function_test($params)</span><span class="cp">{</span>
</span><span class='line'>    <span class="nv">$width</span> <span class="o">=</span> <span class="nv">$params</span><span class="o">[</span><span class="s1">&#39;width&#39;</span><span class="o">];</span>
</span><span class='line'>    <span class="nv">$height</span> <span class="o">=</span> <span class="nv">$params</span><span class="o">[</span><span class="s1">&#39;height&#39;</span><span class="o">];</span>
</span><span class='line'>    <span class="nv">$area</span> <span class="o">=</span> <span class="nv">$width</span> <span class="o">*</span> <span class="nv">$height</span><span class="o">;</span>
</span><span class='line'>    <span class="na">return</span> <span class="nv">$area</span><span class="o">;</span>
</span><span class='line'>  <span class="cp">}</span><span class="x"></span>
</span><span class='line'><span class="x">  </span><span class="cp">{</span><span class="c">* {test width=150 height=200} *</span><span class="cp">}</span><span class="x"></span>
</span><span class='line'><span class="x">  modifiers 修饰插件</span>
</span><span class='line'><span class="x">  文件名格式：modifiers.函数名称.php</span>
</span><span class='line'><span class="x">  文件格式：smarty_modifier_插件名</span>
</span><span class='line'><span class="x">  function smarty_modifier_test($uteim, $format)</span><span class="cp">{</span>
</span><span class='line'>    <span class="na">return</span> <span class="na">date</span><span class="o">(</span><span class="nv">$format</span><span class="o">,</span> <span class="nv">$utime</span><span class="o">);</span>
</span><span class='line'>  <span class="cp">}</span><span class="x"></span>
</span><span class='line'><span class="x">  </span><span class="cp">{</span><span class="c">* {$time | test:&#39;Y-m-d H:i:s&#39;} *</span><span class="cp">}</span><span class="x"></span>
</span><span class='line'><span class="x">  block functions 区块函数插件</span>
</span><span class='line'><span class="x">  文件名格式：block.函数名称.php</span>
</span><span class='line'><span class="x">  文件格式：smarty_block_插件名</span>
</span><span class='line'><span class="x">  function smarty_block_test2($params, $content)</span><span class="cp">{</span>
</span><span class='line'>    <span class="nv">$replace</span> <span class="o">=</span> <span class="nv">$parames</span><span class="o">[</span><span class="s1">&#39;replace&#39;</span><span class="o">];</span>
</span><span class='line'>    <span class="nv">$maxnum</span> <span class="o">=</span> <span class="nv">$params</span><span class="o">[</span><span class="s1">&#39;maxnum&#39;</span><span class="o">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="na">if</span><span class="o">(</span><span class="nv">$replace</span> <span class="o">==</span> <span class="s1">&#39;true&#39;</span><span class="o">){</span>
</span><span class='line'>        <span class="nv">$content</span> <span class="o">=</span> <span class="na">str_replace</span><span class="o">(</span><span class="s1">&#39;，&#39;</span><span class="o">,</span><span class="s1">&#39;,&#39;</span><span class="o">,</span><span class="nv">$content</span><span class="o">);</span>
</span><span class='line'>        <span class="nv">$content</span> <span class="o">=</span> <span class="na">str_replace</span><span class="o">(</span><span class="s1">&#39;。&#39;</span><span class="o">,</span><span class="s1">&#39;.&#39;</span><span class="o">,</span><span class="nv">$content</span><span class="o">);</span>
</span><span class='line'>    <span class="cp">}</span><span class="x"></span>
</span><span class='line'><span class="x">    $content = substr($content, 0, $maxnum);</span>
</span><span class='line'><span class="x">    return $content;</span>
</span><span class='line'><span class="x">  }</span>
</span><span class='line'><span class="x">  </span><span class="cp">{</span><span class="c">* </span>
</span><span class='line'><span class="c">    {test2 replace=&quot;true&quot; maxnum=29} </span>
</span><span class='line'><span class="c">    {$str}</span>
</span><span class='line'><span class="c">    {/test2}</span>
</span><span class='line'><span class="c">  *</span><span class="cp">}</span><span class="x"></span>
</span><span class='line'><span class="x">tips: 插件命名不能重复</span>
</span><span class='line'><span class="x">3 如何来制作 使用插件：</span>
</span><span class='line'><span class="x">  （1）使用registerPlugin方法注册写好的自定义函数</span>
</span><span class='line'><span class="x">  （2）将写好的插件放入Smarty解压目录中的lib目录下的plugins目录里</span>
</span><span class='line'><span class="x">  （3）php的内置函数，可以自动以修饰插件(变量调节器)的形式在模版里使用</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Html5判断微信、ios、android端口]]></title>
    <link href="http://xlingyun.github.io/blog/20170425/html5pan-duan-wei-xin-,-ios,-androidduan-kou/"/>
    <updated>2017-04-25T19:04:31+08:00</updated>
    <id>http://xlingyun.github.io/blog/20170425/html5pan-duan-wei-xin-,-ios,-androidduan-kou</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">u</span> <span class="o">=</span> <span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">ua</span> <span class="o">=</span> <span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">isAndroid</span> <span class="o">=</span> <span class="nx">u</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;Android&#39;</span><span class="p">)</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span> <span class="o">||</span> <span class="nx">u</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;Adr&#39;</span><span class="p">)</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="c1">//android终端</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">isiOS</span> <span class="o">=</span> <span class="o">!!</span><span class="nx">u</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\(i[^;]+;( U;)? CPU.+Mac OS X/</span><span class="p">);</span> <span class="c1">//ios终端</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">username</span> <span class="o">=</span> <span class="nx">getUrlParam</span><span class="p">(</span><span class="s1">&#39;username&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">passwd</span> <span class="o">=</span> <span class="nx">getUrlParam</span><span class="p">(</span><span class="s1">&#39;passwd&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="nx">ua</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/MicroMessenger/i</span><span class="p">)</span><span class="o">==</span><span class="s2">&quot;micromessenger&quot;</span><span class="p">){</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;.start_btn,.down&quot;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">){</span>
</span><span class='line'>            <span class="nx">event</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
</span><span class='line'>            <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.tips&#39;</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;display&#39;</span><span class="p">,</span><span class="s1">&#39;block&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.tips&#39;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">){</span>
</span><span class='line'>            <span class="nx">event</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
</span><span class='line'>            <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.tips&#39;</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;display&#39;</span><span class="p">,</span><span class="s1">&#39;none&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="nx">isiOS</span><span class="p">){</span>
</span><span class='line'>            <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;.down&quot;</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">event</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
</span><span class='line'>                <span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="o">=</span><span class="s1">&#39;https://itunes.apple.com/us/app/jie-ji-bu-yu-qian-pao-ban/id1192650760&#39;</span><span class="p">;</span>
</span><span class='line'>                <span class="nb">window</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s1">&#39;https://itunes.apple.com/us/app/jie-ji-bu-yu-qian-pao-ban/id1192650760&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>            <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.start_btn&#39;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">url</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;wbjjbyapp://wbjjby/openwith?username=&quot;</span><span class="o">+</span> <span class="nx">username</span> <span class="o">+</span><span class="s2">&quot;&amp;passwd=&quot;</span><span class="o">+</span> <span class="nx">passwd</span><span class="p">);</span>
</span><span class='line'>                <span class="nx">url</span> <span class="o">=</span> <span class="s2">&quot;wbjjbyapp://wbjjby/openwith?username=&quot;</span><span class="o">+</span> <span class="nx">username</span> <span class="o">+</span><span class="s2">&quot;&amp;passwd=&quot;</span><span class="o">+</span> <span class="nx">passwd</span><span class="p">;</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">ifr</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;iframe&#39;</span><span class="p">);</span>
</span><span class='line'>                <span class="nx">ifr</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="nx">http</span><span class="o">:</span><span class="c1">//blog.csdn.net/jsonya/article/details/url;</span>
</span><span class='line'>                <span class="nx">ifr</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span> <span class="o">=</span><span class="s1">&#39;none&#39;</span><span class="p">;</span>
</span><span class='line'>                <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">ifr</span><span class="p">);</span>
</span><span class='line'>            <span class="p">})</span>
</span><span class='line'>        <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">isAndroid</span><span class="p">){</span>
</span><span class='line'>            <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;.down&quot;</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">event</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">confirm</span><span class="p">(</span><span class="s2">&quot;是否下载？&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="nx">r</span><span class="o">==</span><span class="kc">true</span><span class="p">){</span>
</span><span class='line'>                    <span class="nb">window</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s1">&#39;http://downcdn.boxwan.cn/buyu/fish_10000.apk&#39;</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>            <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.start_btn&#39;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>                <span class="c1">// var url=&quot;wbjjby://?webcode=22222&quot;;</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="s2">&quot;wbjjby://?username=&quot;</span><span class="o">+</span> <span class="nx">username</span> <span class="o">+</span><span class="s2">&quot;&amp;passwd=&quot;</span><span class="o">+</span> <span class="nx">passwd</span><span class="p">;</span> <span class="c1">//&quot;shareapp://?webCode=405096&quot;;</span>
</span><span class='line'>                <span class="nb">window</span><span class="p">.</span><span class="nx">location</span> <span class="o">=</span> <span class="nx">url</span><span class="p">;</span>
</span><span class='line'>                <span class="nb">document</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">url</span><span class="p">);</span>
</span><span class='line'>                <span class="c1">// window.location.href=http://blog.csdn.net/jsonya/article/details/url;</span>
</span><span class='line'>            <span class="p">})</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript事件委托]]></title>
    <link href="http://xlingyun.github.io/blog/20170424/javascriptshi-jian-wei-tuo/"/>
    <updated>2017-04-24T17:48:40+08:00</updated>
    <id>http://xlingyun.github.io/blog/20170424/javascriptshi-jian-wei-tuo</id>
    <content type="html"><![CDATA[<h3>基本概念</h3>

<p>事件委托，通俗地来讲，就是把一个元素响应事件（click、focus&hellip;&hellip;）的函数委托到另一个元素；</p>

<p>一般来讲，会把一个或者一组元素的事件委托到它的父层或者更外层元素上，真正绑定事件的是外层元素，当事件响应到需要绑定的元素上时，会通过事件冒泡机制从而触发它的外层元素的绑定事件上，然后在外层元素上去执行函数。</p>

<p>举个例子，比如一个宿舍的同学同时快递到了，一种方法就是他们都傻傻地一个个去领取，还有一种方法就是把这件事情委托给宿舍长，让一个人出去拿好所有快递，然后再根据收件人一一分发给每个宿舍同学；</p>

<p>在这里，取快递就是一个事件，每个同学指的是需要响应事件的 DOM 元素，而出去统一领取快递的宿舍长就是代理的元素，所以真正绑定事件的是这个元素，按照收件人分发快递的过程就是在事件执行中，需要判断当前响应的事件应该匹配到被代理元素中的哪一个或者哪几个。</p>

<h3>事件冒泡</h3>

<p>前面提到 DOM 中事件委托的实现是利用事件冒泡的机制，那么事件冒泡是什么呢？</p>

<p>在 document.addEventListener 的时候我们可以设置事件模型：事件冒泡、事件捕获，一般来说都是用事件冒泡的模型；</p>

<p><img src="http://oot79f1a9.bkt.clouddn.com/QQ20170424-192929.png" alt="事件冒泡模型" /></p>

<p>如上图所示，事件模型是指分为三个阶段：</p>

<ul>
<li>捕获阶段：在事件冒泡的模型中，捕获阶段不会响应任何事件；</li>
<li>目标阶段：目标阶段就是指事件响应到触发事件的最底层元素上；</li>
<li>冒泡阶段：冒泡阶段就是事件的触发响应会从最底层目标一层层地向外到最外层（根节点），事件代理即是利用事件冒泡的机制把里层所需要响应的事件绑定到外层；</li>
</ul>


<h3>事件委托的优点</h3>

<ol>
<li>减少内存消耗</li>
</ol>


<p>试想一下，若果我们有一个列表，列表之中有大量的列表项，我们需要在点击列表项的时候响应一个事件；</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;ul</span> <span class="na">id=</span><span class="s">&quot;list&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>item 1<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>item 2<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>item 3<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  ......
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>item n<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>// ...... 代表中间还有未知数个 li
</span></code></pre></td></tr></table></div></figure>


<p>如果给每个列表项一一都绑定一个函数，那对于内存消耗是非常大的，效率上需要消耗很多性能；</p>

<p>因此，比较好的方法就是把这个点击事件绑定到他的父层，也就是 <code>ul</code> 上，然后在执行事件的时候再去匹配判断目标元素；</p>

<p>所以事件委托可以减少大量的内存消耗，节约效率。</p>

<ol>
<li>动态绑定事件</li>
</ol>


<p>比如上述的例子中列表项就几个，我们给每个列表项都绑定了事件；</p>

<p>在很多时候，我们需要通过 AJAX 或者用户操作动态的增加或者去除列表项元素，那么在每一次改变的时候都需要重新给新增的元素绑定事件，给即将删去的元素解绑事件；</p>

<p>如果用了事件委托就没有这种麻烦了，因为事件是绑定在父层的，和目标元素的增减是没有关系的，执行到目标元素是在真正响应执行事件函数的过程中去匹配的；</p>

<p>所以使用事件在动态绑定事件的情况下是可以减少很多重复工作的。</p>

<h3>jQuery 中的事件委托</h3>

<p>jQuery 中的事件委托相信很多人都用过，它主要这几种方法来实现：</p>

<ul>
<li>$.on : 基本用法: $(&lsquo;.parent&rsquo;).on(&lsquo;click&rsquo;, &lsquo;a&rsquo;, function () { console.log(&lsquo;click event on tag a&rsquo;); })，它是 .parent 元素之下的 a 元素的事件代理到 $(&lsquo;.parent&rsquo;) 之上，只要在这个元素上有点击事件，就会自动寻找到 .parent 元素下的 a 元素，然后响应事件；</li>
<li>$.delegate : 基本用法: $(&lsquo;.parent&rsquo;).delegate(&lsquo;a&rsquo;, &lsquo;click&rsquo;, function () { console.log(&lsquo;click event on tag a&rsquo;); })，同上，并且还有相对应的 $.delegate 来删除代理的事件；</li>
<li>$.live : 基本使用方法: $(&lsquo;a&rsquo;, $(&lsquo;.parent&rsquo;)).live(&lsquo;click&rsquo;, function () { console.log(&lsquo;click event on tag a&rsquo;); })，同上，然而如果没有传入父层元素 $(.parent)，那事件会默认委托到 $(document) 上；(已废除)</li>
</ul>


<h3>基本实现</h3>

<p>比如我们有这样的一个 HTML 片段：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;ul</span> <span class="na">id=</span><span class="s">&quot;list&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>item 1<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>item 2<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>item 3<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  ......
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>item n<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>// ...... 代表中间还有未知数个 li
</span></code></pre></td></tr></table></div></figure>


<p>我们来实现把 #list 下的 li 元素的事件代理委托到它的父层元素也就是 #list 上：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// 给父层元素绑定事件</span>
</span><span class='line'><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;list&#39;</span><span class="p">).</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 兼容性处理</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">event</span> <span class="o">=</span> <span class="nx">e</span> <span class="o">||</span> <span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">target</span> <span class="o">=</span> <span class="nx">event</span><span class="p">.</span><span class="nx">target</span> <span class="o">||</span> <span class="nx">event</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">// 判断是否匹配目标元素</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">target</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLocaleLowerCase</span> <span class="o">===</span> <span class="s1">&#39;li&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;the content is: &#39;</span><span class="p">,</span> <span class="nx">target</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>在上述代码中， target 元素则是在 #list 元素之下具体被点击的元素，然后通过判断 target 的一些属性（比如：nodeName，id 等等）可以更精确地匹配到某一类 #list li 元素之上；</p>

<h3>使用 Element.matches 精确匹配</h3>

<p>如果改变下 HTML 成：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;ul</span> <span class="na">id=</span><span class="s">&quot;list&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li</span> <span class="na">className=</span><span class="s">&quot;class-1&quot;</span><span class="nt">&gt;</span>item 1<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>item 2<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li</span> <span class="na">className=</span><span class="s">&quot;class-1&quot;</span><span class="nt">&gt;</span>item 3<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  ......
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>item n<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>// ...... 代表中间还有未知数个 li
</span></code></pre></td></tr></table></div></figure>


<p>这里，我们想把 #list 元素下的 li 元素（并且它的 class 为 class-1）的点击事件委托代理到 #list 之上；</p>

<p>如果通过上述的方法我们还需要在 <code>if (target.nodeName.toLocaleLowerCase === 'li')</code> 判断之中在加入一个判断 <code>target.nodeName.className === 'class-1'</code>；</p>

<p>但是如果想像 CSS 选择其般做更加灵活的匹配的话，上面的判断未免就太多了，并且很难做到灵活性，这里可以使用 Element.matches API 来匹配；</p>

<p>Element.matches API 的基本使用方法: <code>Element.matches(selectorString)，selectorString</code> 既是 CSS 那样的选择器规则，比如本例中可以使用 <code>target.matches('li.class-1')</code>，他会返回一个布尔值，如果 target 元素是标签 li 并且它的类是 class-1 ，那么就会返回 true，否则返回 false；</p>

<p>当然它的兼容性还有一些问题，需要 IE9 及以上的现代化浏览器版本；</p>

<p>我们可以使用 Polyfill 来解决兼容性上的问题：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">matches</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">matches</span> <span class="o">=</span>
</span><span class='line'>    <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">matchesSelector</span> <span class="o">||</span>
</span><span class='line'>    <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">mozMatchesSelector</span> <span class="o">||</span>
</span><span class='line'>    <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">msMatchesSelector</span> <span class="o">||</span>
</span><span class='line'>    <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">oMatchesSelector</span> <span class="o">||</span>
</span><span class='line'>    <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">webkitMatchesSelector</span> <span class="o">||</span>
</span><span class='line'>    <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">matches</span> <span class="o">=</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nb">document</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">).</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span>
</span><span class='line'>        <span class="nx">i</span> <span class="o">=</span> <span class="nx">matches</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>
</span><span class='line'>      <span class="k">while</span> <span class="p">(</span><span class="o">--</span><span class="nx">i</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nx">matches</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span> <span class="o">!==</span> <span class="k">this</span><span class="p">)</span> <span class="p">{}</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">i</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>加上 Element.matches 之后就可以来实现我们的需求了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">matches</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">matches</span> <span class="o">=</span>
</span><span class='line'>    <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">matchesSelector</span> <span class="o">||</span>
</span><span class='line'>    <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">mozMatchesSelector</span> <span class="o">||</span>
</span><span class='line'>    <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">msMatchesSelector</span> <span class="o">||</span>
</span><span class='line'>    <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">oMatchesSelector</span> <span class="o">||</span>
</span><span class='line'>    <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">webkitMatchesSelector</span> <span class="o">||</span>
</span><span class='line'>    <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">matches</span> <span class="o">=</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nb">document</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">).</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span>
</span><span class='line'>        <span class="nx">i</span> <span class="o">=</span> <span class="nx">matches</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>
</span><span class='line'>      <span class="k">while</span> <span class="p">(</span><span class="o">--</span><span class="nx">i</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nx">matches</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span> <span class="o">!==</span> <span class="k">this</span><span class="p">)</span> <span class="p">{}</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">i</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;list&#39;</span><span class="p">).</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 兼容性处理</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">event</span> <span class="o">=</span> <span class="nx">e</span> <span class="o">||</span> <span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">target</span> <span class="o">=</span> <span class="nx">event</span><span class="p">.</span><span class="nx">target</span> <span class="o">||</span> <span class="nx">event</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">target</span><span class="p">.</span><span class="nx">matches</span><span class="p">(</span><span class="s1">&#39;li.class-1&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;the content is: &#39;</span><span class="p">,</span> <span class="nx">target</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h3>函数封装</h3>

<p>在应对更多场景上我们可以把事件代理的功能封装成一个公用函数，这样就可以重复利用了。</p>

<p>结合上面的例子来实现一个函数 eventDelegate，它接受四个参数：</p>

<ul>
<li>[String] 一个选择器字符串用于过滤需要实现代理的父层元素，既事件需要被真正绑定之上；</li>
<li>[String] 一个选择器字符串用于过滤触发事件的选择器元素的后代，既我们需要被代理事件的元素；</li>
<li>[String] 一个或多个用空格分隔的事件类型和可选的命名空间，如 click 或 keydown.click ;</li>
<li>[Function] 需要代理事件响应的函数；</li>
</ul>


<p>这里就有几个关键点：</p>

<ul>
<li>对于父层代理的元素可能有多个，需要一一绑定事件；</li>
<li>对于绑定的事件类型可能有多个，需要一一绑定事件；</li>
<li>在处理匹配被代理的元素之中需要考虑到兼容性问题；</li>
<li>在执行所绑定的函数的时候需要传入正确的参数以及考虑到 <code>this</code> 的问题；</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">eventDelegate</span> <span class="p">(</span><span class="nx">parentSelector</span><span class="p">,</span> <span class="nx">targetSelector</span><span class="p">,</span> <span class="nx">events</span><span class="p">,</span> <span class="nx">foo</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 触发执行的函数</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">triFunction</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// 兼容性处理</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">event</span> <span class="o">=</span> <span class="nx">e</span> <span class="o">||</span> <span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">target</span> <span class="o">=</span> <span class="nx">event</span><span class="p">.</span><span class="nx">target</span> <span class="o">||</span> <span class="nx">event</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 处理 matches 的兼容性</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">matches</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">matches</span> <span class="o">=</span>
</span><span class='line'>        <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">matchesSelector</span> <span class="o">||</span>
</span><span class='line'>        <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">mozMatchesSelector</span> <span class="o">||</span>
</span><span class='line'>        <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">msMatchesSelector</span> <span class="o">||</span>
</span><span class='line'>        <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">oMatchesSelector</span> <span class="o">||</span>
</span><span class='line'>        <span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">webkitMatchesSelector</span> <span class="o">||</span>
</span><span class='line'>        <span class="kd">function</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">matches</span> <span class="o">=</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nb">document</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">).</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span>
</span><span class='line'>            <span class="nx">i</span> <span class="o">=</span> <span class="nx">matches</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>
</span><span class='line'>          <span class="k">while</span> <span class="p">(</span><span class="o">--</span><span class="nx">i</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nx">matches</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span> <span class="o">!==</span> <span class="k">this</span><span class="p">)</span> <span class="p">{}</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">i</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">// 判断是否匹配到我们所需要的元素上</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">target</span><span class="p">.</span><span class="nx">matches</span><span class="p">(</span><span class="nx">targetSelector</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// 执行绑定的函数，注意 this</span>
</span><span class='line'>      <span class="nx">foo</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">target</span><span class="p">,</span> <span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">// 如果有多个事件的话需要全部一一绑定事件</span>
</span><span class='line'>  <span class="nx">events</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;.&#39;</span><span class="p">).</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// 多个父层元素的话也需要一一绑定</span>
</span><span class='line'>    <span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="nx">parentSelector</span><span class="p">)).</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">$p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">$p</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">evt</span><span class="p">,</span> <span class="nx">triFunction</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Css选择器]]></title>
    <link href="http://xlingyun.github.io/blog/20170424/cssxuan-ze-qi/"/>
    <updated>2017-04-24T16:33:05+08:00</updated>
    <id>http://xlingyun.github.io/blog/20170424/cssxuan-ze-qi</id>
    <content type="html"><![CDATA[<blockquote><h3>Guides</h3></blockquote>

<hr />

<h3>在选择器中使用：target伪类</h3>

<p>为了辅助标识那些指向文档特定部分链接的目标, <a href="https://www.w3.org/TR/css3-selectors/#target-pseudo">CSS3 选择器</a> 引入了<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:target">:target</a><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes">伪类</a>. Netscape 7.1 已经在 Netscape 系列中加入了这个伪类的支持, 这一新的举措让页面作者能够辅助用户在较大的页面中定位。</p>

<h3>选择一个目标</h3>

<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:target">:target</a> 伪类用来指定那些包含片段标识符的 URI 的目标元素样式。 例如, <code>http://developer.mozilla.org/en/docs/Using_the_:target_selector#Example</code> 这个 URI 包含了 #Example 片段标识符。 在HTML中, 标识符是元素的id或者name属性,。由于这两者位于相同的命名空间， 因此， 这个示例 URI 指向的是文档顶层的 &ldquo;Example&rdquo; 。</p>

<p>假设你想修改 URI 指向的任何 h2 元素，但是又不想把样式应用到任何其它同类型的元素，那么以下示例足够简单有用：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>h2:target {font-weight: bold;}</span></code></pre></td></tr></table></div></figure>


<p>同样的，将样式应用于特定的文档片段也是可行的。这是通过使用 URI 中相同的标识符实现的。例如，要在 #Example 文档片段中加入边框，我们可以通过如下代码实现：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#Example:target {border: 1px solid black;}</span></code></pre></td></tr></table></div></figure>


<h3>定位所有元素</h3>

<p>如果想要创建应用于所有目标元素的样式，那么可以使用通用选择器：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:target {color: red;}</span></code></pre></td></tr></table></div></figure>


<h3>示例</h3>

<p>在以下示例中，5个链接指向了同一文档中的元素。例如，选择"First"链接会导致<code>&lt;h1 id="one"&gt;</code>成为目标元素。注意，由于目标元素有可能会被放置到浏览器窗口的顶层，因此文档可能会跳到新的滚动位置。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h4</span> <span class="na">id=</span><span class="s">&quot;one&quot;</span><span class="nt">&gt;</span>...<span class="nt">&lt;/h4&gt;</span> <span class="nt">&lt;p</span> <span class="na">id=</span><span class="s">&quot;two&quot;</span><span class="nt">&gt;</span>...<span class="nt">&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;three&quot;</span><span class="nt">&gt;</span>...<span class="nt">&lt;/div&gt;</span> <span class="nt">&lt;a</span> <span class="na">id=</span><span class="s">&quot;four&quot;</span><span class="nt">&gt;</span>...<span class="nt">&lt;/a&gt;</span> <span class="nt">&lt;em</span> <span class="na">id=</span><span class="s">&quot;five&quot;</span><span class="nt">&gt;</span>...<span class="nt">&lt;/em&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#one&quot;</span><span class="nt">&gt;</span>First<span class="nt">&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#two&quot;</span><span class="nt">&gt;</span>Second<span class="nt">&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#three&quot;</span><span class="nt">&gt;</span>Third<span class="nt">&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#four&quot;</span><span class="nt">&gt;</span>Fourth<span class="nt">&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#five&quot;</span><span class="nt">&gt;</span>Fifth<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>结论</h3>

<p>在片段标识符指向部分文档的情况下，读者可能会对到底应该阅读文档的哪一部分感到疑惑。通过对不同的目标元素的样式进行修饰, 读者的相关疑惑会减少或者消除。</p>

<blockquote><h3>Basic Selectors</h3></blockquote>

<hr />

<h3>元素选择器</h3>

<h4>概述</h4>

<p>CSS元素选择器(也称为类型选择器)通过node节点名称匹配元素. 因此,在单独使用时,寻找特定类型的元素时,元素选择器都会匹配该文档中所有此类型的元素.</p>

<h4>语法</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>元素 { 样式声明 }
</span></code></pre></td></tr></table></div></figure>


<h4>示例</h4>

<p>css</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">span</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background-color</span><span class="o">:</span> <span class="n">DodgerBlue</span><span class="p">;</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="m">#ffffff</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>HTML</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">&lt;</span><span class="nt">span</span><span class="o">&gt;</span><span class="err">这里是由</span> <span class="nt">span</span> <span class="err">包裹的一些文字</span><span class="o">.&lt;/</span><span class="nt">span</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span><span class="err">这里是由</span> <span class="nt">p</span> <span class="err">包裹的一些文字</span><span class="o">.&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>效果
![]
这里是由 span 包裹的一些文字.
这里是由 p 包裹的一些文字.</p>

<h3>类选择器</h3>

<h4>概述</h4>

<h4>语法</h4>

<h4>示例</h4>

<h3>ID选择器</h3>

<h4>概述</h4>

<h4>语法</h4>

<h4>示例</h4>

<h3>通配选择器</h3>

<h4>示例</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">*[</span><span class="nt">lang</span><span class="o">^=</span><span class="nt">en</span><span class="o">]</span><span class="p">{</span><span class="k">color</span><span class="o">:</span><span class="nb">green</span><span class="p">;}</span>
</span><span class='line'><span class="o">*</span><span class="nc">.warning</span> <span class="p">{</span><span class="k">color</span><span class="o">:</span><span class="nb">red</span><span class="p">;}</span>
</span><span class='line'><span class="o">*</span><span class="nf">#maincontent</span> <span class="p">{</span><span class="k">border</span><span class="o">:</span> <span class="m">1px</span> <span class="k">solid</span> <span class="nb">blue</span><span class="p">;}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的CSS作用于下面的HTML:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">&lt;</span><span class="nt">p</span> <span class="nt">class</span><span class="o">=</span><span class="s2">&quot;warning&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nt">span</span> <span class="nt">lang</span><span class="o">=</span><span class="s2">&quot;en-us&quot;</span><span class="o">&gt;</span><span class="nt">A</span> <span class="nt">green</span> <span class="nt">span</span><span class="o">&lt;/</span><span class="nt">span</span><span class="o">&gt;</span> <span class="nt">in</span> <span class="nt">a</span> <span class="nt">red</span> <span class="nt">paragraph</span><span class="o">.</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span> <span class="nt">id</span><span class="o">=</span><span class="s2">&quot;maincontent&quot;</span> <span class="nt">lang</span><span class="o">=</span><span class="s2">&quot;en-gb&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nt">span</span> <span class="nt">class</span><span class="o">=</span><span class="s2">&quot;warning&quot;</span><span class="o">&gt;</span><span class="nt">A</span> <span class="nt">red</span> <span class="nt">span</span><span class="o">&lt;/</span><span class="nt">span</span><span class="o">&gt;</span> <span class="nt">in</span> <span class="nt">a</span> <span class="nt">green</span> <span class="nt">paragraph</span><span class="o">.</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>则会产生这样的效果:</p>

<p style="color:red;"><span style="color: green;">A green span</span> in a red paragraph.</p>




<p style="color:green;border:1px solid blue"><span style="color:red;">A red span</span> in a green paragraph (with a border.)</p>


<p> <br/>
不推荐使用通配符选择器，因为它是<a href="http://www.stevesouders.com/blog/2009/06/18/simplifying-css-selectors/">性能最低的一个css选择器</a></p>

<h3>属性选择器</h3>

<h5>概述</h5>

<p>属性选择器通过已经存在的属性名或属性值匹配元素。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">[</span><span class="nt">attr</span><span class="o">]</span>
</span><span class='line'><span class="err">表示带有以</span> <span class="nt">attr</span> <span class="err">命名的属性的元素。</span>
</span><span class='line'><span class="o">[</span><span class="nt">attr</span><span class="o">=</span><span class="nt">value</span><span class="o">]</span>
</span><span class='line'><span class="err">表示带有以</span> <span class="nt">attr</span> <span class="err">命名的，且值为</span><span class="s2">&quot;value&quot;</span><span class="err">的属性的元素。</span>
</span><span class='line'><span class="o">[</span><span class="nt">attr</span><span class="o">~=</span><span class="nt">value</span><span class="o">]</span>
</span><span class='line'><span class="err">表示带有以</span> <span class="nt">att</span><span class="err">命名的属性的元素，并且该属性是一个以空格作为分隔的值列表，其中至少一个值为</span><span class="s2">&quot;value&quot;</span><span class="err">。</span>
</span><span class='line'><span class="o">[</span><span class="nt">attr</span><span class="o">|=</span><span class="nt">value</span><span class="o">]</span>
</span><span class='line'><span class="err">表示带有以</span> <span class="nt">attr</span> <span class="err">命名的属性的元素，属性值为“</span><span class="nt">value</span><span class="err">”或是以“</span><span class="nt">value-</span><span class="err">”为前缀（</span><span class="s2">&quot;-&quot;</span><span class="err">为连，</span><span class="nt">Unicode</span><span class="err">编码为</span><span class="nt">U</span><span class="o">+</span><span class="nt">002D</span><span class="err">）开头。典型的应用场景是用来来匹配语言简写代码（如</span><span class="nt">zh-CN</span><span class="err">，</span><span class="nt">zh-</span><span class="err">可以用</span><span class="nt">zh</span><span class="err">作为</span><span class="nt">value</span><span class="err">）。</span>
</span><span class='line'><span class="o">[</span><span class="nt">attr</span><span class="o">^=</span><span class="nt">value</span><span class="o">]</span>
</span><span class='line'><span class="err">表示带有以</span> <span class="nt">attr</span> <span class="err">命名的，且值是以</span><span class="s2">&quot;value&quot;</span><span class="err">开头的属性的元素。</span>
</span><span class='line'><span class="o">[</span><span class="nt">attr</span><span class="o">$=</span><span class="nt">value</span><span class="o">]</span>
</span><span class='line'><span class="err">表示带有以</span> <span class="nt">attr</span> <span class="err">命名的，且值是以</span><span class="s2">&quot;value&quot;</span><span class="err">结尾的属性的元素。</span>
</span><span class='line'><span class="o">[</span><span class="nt">attr</span><span class="o">*=</span><span class="nt">value</span><span class="o">]</span>
</span><span class='line'><span class="err">表示带有以</span> <span class="nt">attr</span> <span class="err">命名的，且值包含有</span><span class="s2">&quot;value&quot;</span><span class="err">的属性的元素。</span>
</span><span class='line'><span class="o">[</span><span class="nt">attr</span> <span class="nt">operator</span> <span class="nt">value</span> <span class="nt">i</span><span class="o">]</span>
</span><span class='line'><span class="err">在带有属性值的属性选型选择器表达式的右括号括号）前添加用空格间隔开的字母</span><span class="nt">i</span><span class="err">（或</span><span class="nt">I</span><span class="err">）可以忽略属性值的大小写（</span><span class="nt">ASCII</span><span class="err">字符范围内的字母）</span>
</span></code></pre></td></tr></table></div></figure>


<h4>示例</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="c">/* 所有具有&quot;lang&quot;属性的 span 元素的字体加粗 */</span>
</span><span class='line'><span class="nt">span</span><span class="o">[</span><span class="nt">lang</span><span class="o">]</span> <span class="p">{</span><span class="k">font-weight</span><span class="o">:</span><span class="k">bold</span><span class="p">;}</span>
</span><span class='line'>
</span><span class='line'><span class="c">/* 所有具有&quot;lang&quot;属性,且值为&quot;pt&quot;的 span 元素的字体为绿色 */</span>
</span><span class='line'><span class="nt">span</span><span class="o">[</span><span class="nt">lang</span><span class="o">=</span><span class="s2">&quot;pt&quot;</span><span class="o">]</span> <span class="p">{</span><span class="k">color</span><span class="o">:</span><span class="nb">green</span><span class="p">;}</span>
</span><span class='line'>
</span><span class='line'><span class="c">/* 所有具有&quot;lang&quot;属性,且值为&quot;en-us&quot;的 span 元素的字体为蓝色*/</span>
</span><span class='line'><span class="nt">span</span><span class="o">[</span><span class="nt">lang</span><span class="o">~=</span><span class="s2">&quot;en-us&quot;</span><span class="o">]</span> <span class="p">{</span><span class="k">color</span><span class="o">:</span> <span class="nb">blue</span><span class="p">;}</span>
</span><span class='line'>
</span><span class='line'><span class="c">/* 任意具有&quot;lang&quot;属性,且值带有&quot;zh&quot;字符串的 span 元素的字体为红色, 它会匹配简体中文(zh-CN)以及繁体中文(zh-TW) */</span>
</span><span class='line'><span class="nt">span</span><span class="o">[</span><span class="nt">lang</span><span class="o">|=</span><span class="s2">&quot;zh&quot;</span><span class="o">]</span> <span class="p">{</span><span class="k">color</span><span class="o">:</span> <span class="nb">red</span><span class="p">;}</span>
</span><span class='line'>
</span><span class='line'><span class="c">/* 所有内部链接背景都为金色 */</span>
</span><span class='line'><span class="nt">a</span><span class="o">[</span><span class="nt">href</span><span class="o">^=</span><span class="s2">&quot;#&quot;</span><span class="o">]</span> <span class="p">{</span><span class="k">background-color</span><span class="o">:</span><span class="nb">gold</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c">/* 所有以&quot;.cn&quot;结尾的链接字体都为红色 */</span>
</span><span class='line'><span class="nt">a</span><span class="o">[</span><span class="nt">href</span><span class="o">$=</span><span class="s2">&quot;.cn&quot;</span><span class="o">]</span> <span class="p">{</span><span class="k">color</span><span class="o">:</span> <span class="nb">red</span><span class="p">;}</span>
</span><span class='line'>
</span><span class='line'><span class="c">/* 所有带有&quot;example&quot;的链接背景都为灰色 */</span>
</span><span class='line'><span class="nt">a</span><span class="o">[</span><span class="nt">href</span><span class="o">*=</span><span class="s2">&quot;example&quot;</span><span class="o">]</span> <span class="p">{</span><span class="k">background-color</span><span class="o">:</span> <span class="m">#CCCCCC</span><span class="p">;}</span>
</span><span class='line'>
</span><span class='line'><span class="c">/*所有email输入框的边框都为蓝色*/</span>
</span><span class='line'><span class="c">/*这里匹配的输入框类型&quot;emeil&quot;可以忽略其大小写，比如 &quot;email&quot;，&quot;EMAIL&quot;，&quot;eMaiL&quot;等等都能匹配*/</span>
</span><span class='line'><span class="nt">input</span><span class="o">[</span><span class="nt">type</span><span class="o">=</span><span class="s2">&quot;email&quot;</span> <span class="nt">i</span><span class="o">]</span> <span class="p">{</span><span class="k">border-color</span><span class="o">:</span> <span class="nb">blue</span><span class="p">;}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的CSS作用于下面的HTML时:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;hello-example&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://example.com&quot;</span><span class="nt">&gt;</span>English:<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>    <span class="nt">&lt;span</span> <span class="na">lang=</span><span class="s">&quot;en-us en-gb en-au en-nz&quot;</span><span class="nt">&gt;</span>Hello World!<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;hello-example&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#portuguese&quot;</span><span class="nt">&gt;</span>Portuguese:<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>    <span class="nt">&lt;span</span> <span class="na">lang=</span><span class="s">&quot;pt&quot;</span><span class="nt">&gt;</span>Olá Mundo!<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;hello-example&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://example.cn&quot;</span><span class="nt">&gt;</span>Chinese (Simplified):<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>    <span class="nt">&lt;span</span> <span class="na">lang=</span><span class="s">&quot;zh-CN&quot;</span><span class="nt">&gt;</span>世界您好！<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;hello-example&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://example.cn&quot;</span><span class="nt">&gt;</span>Chinese (Traditional):<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>    <span class="nt">&lt;span</span> <span class="na">lang=</span><span class="s">&quot;zh-TW&quot;</span><span class="nt">&gt;</span>世界您好！<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Combinators</h3>

<hr />

<h4>相邻兄弟选择器</h4>

<h5>概述</h5>

<p>  这被称为一个相邻选择器. 它只会匹配紧跟其前方元素的同胞元素.</p>

<h5>语法</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>前方元素 + 目标元素 {样式声明 }
</span></code></pre></td></tr></table></div></figure>


<h5>示例</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>li + li {
</span><span class='line'>  color: red;
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>上面的CSS作用于下面的HTML</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;ul&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>One<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>Two<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>Three<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>则会产生下面的效果:</p>

<ul>
<li>One</li>
<li style="color:red">Two</li>
<li style="color:red">Three</li>
</ul>


<p>另一个示例就是紧跟 <code>&lt;img&gt;</code> 元素后的"captioin span"的样式 :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">img</span> <span class="o">+</span> <span class="nt">span</span><span class="nc">.caption</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">font-style</span><span class="o">:</span> <span class="k">italic</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>当上面的CSS作用于下面的HTML后,它会匹配下面的 <code>&lt;span&gt;</code> 元素:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">&quot;photo1.jpg&quot;</span><span class="nt">&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;caption&quot;</span><span class="nt">&gt;</span>The first photo<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">&quot;photo2.jpg&quot;</span><span class="nt">&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;caption&quot;</span><span class="nt">&gt;</span>The second photo<span class="nt">&lt;/span&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>通用兄弟选择器</h2>

<h4>概述</h4>

<p>在使用<code>~</code>连接两个元素时,它会匹配第二个元素,条件是它必须跟(不一定是紧跟)在第一个元素之后,且他们都有一个共同的父元素 .</p>

<h4>语法</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>元素 ~ 元素 {样式声明 }
</span></code></pre></td></tr></table></div></figure>


<h4>示例</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">p</span> <span class="o">~</span> <span class="nt">span</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="nb">red</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的CSS作用于下面的HTML中:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;span&gt;</span>This is not red.<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;p&gt;</span>Here is a paragraph.<span class="nt">&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;code&gt;</span>Here is some code.<span class="nt">&lt;/code&gt;</span>
</span><span class='line'><span class="nt">&lt;span&gt;</span>And here is a span.<span class="nt">&lt;/span&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>则会产生下面的效果:</p>

<p>This is not red.</p>

<p>Here is a paragraph.</p>

<p>Here is some code.<span style="color:red">And here is a span.</span></p>

<h3>子选择器</h3>

<h3>后代选择器</h3>

<h4>概述</h4>

<h4>语法</h4>

<h4>示例</h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript]]></title>
    <link href="http://xlingyun.github.io/blog/20170422/javascript/"/>
    <updated>2017-04-22T03:06:52+08:00</updated>
    <id>http://xlingyun.github.io/blog/20170422/javascript</id>
    <content type="html"><![CDATA[<h4>对象引用之深（浅）拷贝</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">###</span> <span class="err">深拷贝</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * 递归：</span>
</span><span class='line'><span class="cm"> * 1. 函数调用自身，执行递的动作</span>
</span><span class='line'><span class="cm"> * 2. 最后一次判断一个终止条件</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">deepCopy</span><span class="p">(</span><span class="nx">obj</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">newObj</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">obj</span> <span class="o">!=</span> <span class="s1">&#39;object&#39;</span><span class="p">){</span>
</span><span class='line'>        <span class="c">&lt;!--</span> <span class="nx">console</span><span class="p">.</span><span class="nx">trace</span><span class="p">();</span>  <span class="o">--&gt;</span><span class="c1">//打印执行过程</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">obj</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">attr</span> <span class="k">in</span> <span class="nx">obj</span><span class="p">){</span>
</span><span class='line'>        <span class="nx">newObj</span><span class="p">[</span><span class="nx">attr</span><span class="p">]</span> <span class="o">=</span> <span class="nx">deepCopy</span><span class="p">(</span><span class="nx">obj</span><span class="p">[</span><span class="nx">attr</span><span class="p">])</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">newObj</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="err">###</span> <span class="err">浅拷贝</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">copy</span><span class="p">(</span><span class="nx">obj</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">newObj</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">attr</span> <span class="k">in</span> <span class="nx">obj</span><span class="p">){</span>
</span><span class='line'>        <span class="nx">newObj</span><span class="p">[</span><span class="nx">attr</span><span class="p">]</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">attr</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">newObj</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>快速排序</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * 1. 找一个基准点</span>
</span><span class='line'><span class="cm"> * 2. 建立两个数组，分别存储左边和右边的数组</span>
</span><span class='line'><span class="cm"> * 3. 利递归进行比较</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">quickSort</span><span class="p">(</span><span class="nx">arr</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="nx">arr</span><span class="p">.</span><span class="nx">length</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="p">){</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">arr</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">num</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">arr</span><span class="p">.</span><span class="nx">length</span> <span class="o">/</span> <span class="mi">2</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">numValue</span> <span class="o">=</span> <span class="nx">arr</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">num</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">left</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">right</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">len</span><span class="o">=</span><span class="nx">arr</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="nx">len</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">&lt;</span> <span class="nx">numValue</span><span class="p">){</span>
</span><span class='line'>            <span class="nx">left</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span><span class='line'>        <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>            <span class="nx">right</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">quickSort</span><span class="p">(</span><span class="nx">left</span><span class="p">).</span><span class="nx">concat</span><span class="p">([</span><span class="nx">numValue</span><span class="p">],</span> <span class="nx">quickSort</span><span class="p">(</span><span class="nx">right</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>DOM优化</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * chrome:dom方法要比innerHTML性能要好</span>
</span><span class='line'><span class="cm"> * DOM优化</span>
</span><span class='line'><span class="cm"> * 减少DOM操作</span>
</span><span class='line'><span class="cm"> * 节点克隆。-cloneNode</span>
</span><span class='line'><span class="cm"> * 访问元素集合。-尽量用局部变量</span>
</span><span class='line'><span class="cm"> * 元素节点。 -尽量用只获取元素的节点方法</span>
</span><span class='line'><span class="cm"> * 选择器API。-利用querySelector、querySelectorAll</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>        <span class="c1">// var oDiv = document.getElementById(&#39;div1&#39;);</span>
</span><span class='line'>        <span class="c1">// var str = &#39;&#39;;</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/**</span>
</span><span class='line'><span class="cm">        console.time(&#39;hello&#39;);</span>
</span><span class='line'><span class="cm">        for(var i=0;i&lt;5000;i++){</span>
</span><span class='line'><span class="cm">            oDiv.innerHTML += &#39;a&#39;;</span>
</span><span class='line'><span class="cm">        }</span>
</span><span class='line'><span class="cm">        console.timeEnd(&#39;hello&#39;);</span>
</span><span class='line'><span class="cm">        // hello: 178ms</span>
</span><span class='line'><span class="cm">        */</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// console.time(&#39;hello&#39;);</span>
</span><span class='line'>        <span class="c1">// for(var i=0;i&lt;5000;i++){</span>
</span><span class='line'>        <span class="c1">//  str += &#39;a&#39;;</span>
</span><span class='line'>        <span class="c1">// }</span>
</span><span class='line'>        <span class="c1">// oDiv.innerHTML = str;</span>
</span><span class='line'>        <span class="c1">// console.timeEnd(&#39;hello&#39;);</span>
</span><span class='line'>        <span class="c1">// hello: 0.487ms 比上面的性能提高百倍不止</span>
</span><span class='line'>        <span class="c1">// </span>
</span><span class='line'>        <span class="c1">// </span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// var oUl = document.getElementById(&#39;ul1&#39;);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// var str = &#39;&#39;;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// console.time(&#39;hello&#39;);</span>
</span><span class='line'>        <span class="c1">// for(var i=0;i&lt;5000;i++){</span>
</span><span class='line'>        <span class="c1">//  var oLi = document.createElement(&#39;li&#39;);</span>
</span><span class='line'>        <span class="c1">//  oLi.innerHTML = &#39;li&#39;;</span>
</span><span class='line'>        <span class="c1">//  oUl.appendChild(oLi);</span>
</span><span class='line'>        <span class="c1">// }</span>
</span><span class='line'>        <span class="c1">// console.timeEnd(&#39;hello&#39;);//40ms</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// console.time(&#39;hello&#39;);</span>
</span><span class='line'>        <span class="c1">// for(var i=0;i&lt;5000;i++){</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//  str += &#39;&lt;li&gt;&lt;/li&gt;&#39;;</span>
</span><span class='line'>        <span class="c1">// }</span>
</span><span class='line'>        <span class="c1">// oUl.innerHTML = str;</span>
</span><span class='line'>        <span class="c1">// console.timeEnd(&#39;hello&#39;);//8~10ms</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// console.time(&#39;hello&#39;);</span>
</span><span class='line'>        <span class="c1">// var oLi = document.createElement(&#39;li&#39;);</span>
</span><span class='line'>        <span class="c1">// oLi.innerHTML = &#39;li&#39;;</span>
</span><span class='line'>        <span class="c1">// for(var i=0;i&lt;5000;i++){</span>
</span><span class='line'>        <span class="c1">//  var newLi = oLi.cloneNode(true);</span>
</span><span class='line'>        <span class="c1">//  oUl.appendChild(newLi);</span>
</span><span class='line'>        <span class="c1">// }</span>
</span><span class='line'>        <span class="c1">// console.timeEnd(&#39;hello&#39;);//8~10ms</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// var oUl = document.getElementById(&#39;ul1&#39;);</span>
</span><span class='line'>        <span class="c1">// var aLi = document.getElementsByTagName(&#39;li&#39;);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// var doc = document;</span>
</span><span class='line'>        <span class="c1">// var oUl = doc.getElementById(&#39;ul1&#39;);</span>
</span><span class='line'>        <span class="c1">// var aLi = doc.getElementsByTagName(&#39;li&#39;); </span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// for(var i=0;i&lt;5000;i++){</span>
</span><span class='line'>        <span class="c1">//  var oLi = document.createElement(&#39;li&#39;);</span>
</span><span class='line'>        <span class="c1">//  oUl.appendChild(oLi);</span>
</span><span class='line'>        <span class="c1">// }</span>
</span><span class='line'>        <span class="c1">// console.time(&#39;hello&#39;);</span>
</span><span class='line'>        <span class="c1">// for(var i=0;i&lt;aLi.length;i++){</span>
</span><span class='line'>        <span class="c1">//  aLi[i].innerHTML = &#39;li&#39;;</span>
</span><span class='line'>        <span class="c1">// }</span>
</span><span class='line'>        <span class="c1">// console.timeEnd(&#39;hello&#39;);//319~337</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// console.time(&#39;hello&#39;);</span>
</span><span class='line'>        <span class="c1">// var len = aLi.length;</span>
</span><span class='line'>        <span class="c1">// for(var i=0;i&lt;len;i++){</span>
</span><span class='line'>        <span class="c1">//  aLi[i].innerHTML = &#39;li&#39;;</span>
</span><span class='line'>        <span class="c1">// }</span>
</span><span class='line'>        <span class="c1">// console.timeEnd(&#39;hello&#39;);//376~420</span>
</span><span class='line'>        <span class="c1">// </span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// var oUl = document.getElementById(&#39;ul1&#39;);</span>
</span><span class='line'>        <span class="c1">// var aLi = oUl.getElementsByTagName(&#39;li&#39;);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// var aLi = document.querySelectorAll(&#39;#ul1 li&#39;);//上面两句代码跟下面功能一样，但是下面性能比上面要好</span>
</span><span class='line'>        <span class="c1">// </span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// DOM与浏览器</span>
</span><span class='line'>        <span class="c1">// 重排：改变页面的内容</span>
</span><span class='line'>        <span class="c1">// 重绘：浏览器显示内容</span>
</span><span class='line'>        <span class="c1">// 添加顺序</span>
</span><span class='line'>        <span class="c1">// ---尽量在appendChild前添加操作</span>
</span><span class='line'>        <span class="c1">// 合并dom操作</span>
</span><span class='line'>        <span class="c1">// ---利用cssText</span>
</span><span class='line'>        <span class="c1">// 缓存布局信息</span>
</span><span class='line'>        <span class="c1">// 文档碎片</span>
</span><span class='line'>        <span class="c1">// ---createDocumentFragment()</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// var oUl = document.getElementById(&#39;ul1&#39;);</span>
</span><span class='line'>        <span class="c1">// console.time(&#39;hello&#39;);</span>
</span><span class='line'>        <span class="c1">// for(var i=0;i&lt;5000;i++){</span>
</span><span class='line'>        <span class="c1">//  var oLi = document.createElement(&#39;li&#39;);</span>
</span><span class='line'>        <span class="c1">//  oUl.appendChild(oLi);</span>
</span><span class='line'>        <span class="c1">//  oLi.innerHTML = &#39;li&#39;;</span>
</span><span class='line'>        <span class="c1">// }</span>
</span><span class='line'>        <span class="c1">// console.timeEnd(&#39;hello&#39;);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// console.time(&#39;hello&#39;);</span>
</span><span class='line'>        <span class="c1">// for(var i=0;i&lt;5000;i++){</span>
</span><span class='line'>        <span class="c1">//  var oLi = document.createElement(&#39;li&#39;);</span>
</span><span class='line'>        <span class="c1">//  oLi.innerHTML = &#39;li&#39;;</span>
</span><span class='line'>        <span class="c1">//  oUl.appendChild(oLi);</span>
</span><span class='line'>        <span class="c1">// }</span>
</span><span class='line'>        <span class="c1">// console.timeEnd(&#39;hello&#39;);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// var oUl = document.getElementById(&#39;ul1&#39;);</span>
</span><span class='line'>        <span class="c1">// console.time(&#39;hello&#39;);</span>
</span><span class='line'>        <span class="c1">// for(var i=0;i&lt;5000;i++){</span>
</span><span class='line'>        <span class="c1">//  var oLi = document.createElement(&#39;li&#39;);</span>
</span><span class='line'>        <span class="c1">//  // oLi.style.width = &#39;100px&#39;;</span>
</span><span class='line'>        <span class="c1">//  // oLi.style.height = &#39;100px&#39;;</span>
</span><span class='line'>        <span class="c1">//  // oLi.style.background = &#39;red&#39;;</span>
</span><span class='line'>        <span class="c1">//  oLi.style.cssText = &#39;width:100px;height:100px;background:red;&#39;;</span>
</span><span class='line'>        <span class="c1">//  oUl.appendChild(oLi);</span>
</span><span class='line'>        <span class="c1">// }</span>
</span><span class='line'>        <span class="c1">// console.timeEnd(&#39;hello&#39;);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// var oDiv = document.getElementById(&#39;div1&#39;);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// setInterval(function(){</span>
</span><span class='line'>        <span class="c1">//  oDiv.style.left = oDiv.offsetLeft + 1 + &#39;px&#39;;</span>
</span><span class='line'>        <span class="c1">//  oDiv.style.top = oDiv.offsetTop + 1 + &#39;px&#39;;</span>
</span><span class='line'>        <span class="c1">// }, 16);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// var L = oDiv.offsetLeft;</span>
</span><span class='line'>        <span class="c1">// var T = oDiv.offsetTop;</span>
</span><span class='line'>        <span class="c1">// setInterval(function(){</span>
</span><span class='line'>        <span class="c1">//  L++;</span>
</span><span class='line'>        <span class="c1">//  T++;</span>
</span><span class='line'>        <span class="c1">//  oDiv.style.left = L + &#39;px&#39;;</span>
</span><span class='line'>        <span class="c1">//  oDiv.style.top = T + &#39;px&#39;;</span>
</span><span class='line'>        <span class="c1">// }, 16);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// var oUl = document.getElementById(&#39;ul1&#39;);</span>
</span><span class='line'>        <span class="c1">// var oFrag = document.createDocumentFragment();//相当于创建了一个袋子</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// console.time(&#39;hello&#39;);</span>
</span><span class='line'>        <span class="c1">// for(var i=0;i&lt;10000;i++){</span>
</span><span class='line'>        <span class="c1">//  var oLi = document.createElement(&#39;li&#39;);</span>
</span><span class='line'>        <span class="c1">//  oUl.appendChild(oLi);</span>
</span><span class='line'>        <span class="c1">// }</span>
</span><span class='line'>        <span class="c1">// console.timeEnd(&#39;hello&#39;);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// console.time(&#39;hello&#39;);</span>
</span><span class='line'>        <span class="c1">// for(var i=0;i&lt;10000;i++){</span>
</span><span class='line'>        <span class="c1">//  var oLi = document.createElement(&#39;li&#39;);</span>
</span><span class='line'>        <span class="c1">//  oFrag.appendChild(oLi);</span>
</span><span class='line'>        <span class="c1">// }</span>
</span><span class='line'>        <span class="c1">// oUl.appendChild(oFrag);</span>
</span><span class='line'>        <span class="c1">// console.timeEnd(&#39;hello&#39;);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>事件委托</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 事件委托：利用冒泡的原理，把事件加到父级上，触发执行效果</span>
</span><span class='line'><span class="cm"> * 好处：</span>
</span><span class='line'><span class="cm"> *  1.提高性能</span>
</span><span class='line'><span class="cm"> *  2.新添加的元素，还会有之前的事件</span>
</span><span class='line'><span class="cm"> *  </span>
</span><span class='line'><span class="cm"> * event对象：事件源：不管在哪个事件中，只要你操作的那个元素就是事件源</span>
</span><span class='line'><span class="cm"> * IE: window.event.srcElement </span>
</span><span class='line'><span class="cm"> * 标准: event.target</span>
</span><span class='line'><span class="cm"> * nodeName:找到当前元素的标签名</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">doc</span> <span class="o">=</span> <span class="nb">document</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">oUl</span> <span class="o">=</span> <span class="nx">doc</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;ul1&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">aLi</span> <span class="o">=</span> <span class="nx">doc</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;li&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">oInput</span> <span class="o">=</span> <span class="nx">doc</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;input1&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">iNow</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">oUl</span><span class="p">.</span><span class="nx">onmouseover</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ev</span><span class="p">){</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">ev</span> <span class="o">=</span> <span class="nx">ev</span> <span class="o">||</span> <span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">target</span> <span class="o">=</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">target</span> <span class="o">||</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="nx">target</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span> <span class="o">==</span> <span class="s1">&#39;li&#39;</span><span class="p">){</span>
</span><span class='line'>            <span class="nx">target</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">background</span> <span class="o">=</span> <span class="s1">&#39;red&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">oUl</span><span class="p">.</span><span class="nx">onmouseout</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ev</span><span class="p">){</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">ev</span> <span class="o">=</span> <span class="nx">ev</span> <span class="o">||</span> <span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">target</span> <span class="o">=</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">target</span> <span class="o">||</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="nx">target</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span> <span class="o">==</span> <span class="s1">&#39;li&#39;</span><span class="p">){</span>
</span><span class='line'>            <span class="nx">target</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">background</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">oInput</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>        <span class="nx">iNow</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">oLi</span> <span class="o">=</span> <span class="nx">doc</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;li&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">oLi</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="mi">111</span> <span class="o">*</span> <span class="nx">iNow</span><span class="p">;</span>
</span><span class='line'>        <span class="nx">oUl</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">oLi</span><span class="p">);</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>js跨域</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * jsonp: json + padding(内填充) </span>
</span><span class='line'><span class="cm"> * ajax: XMLHttpRequest(); : 不能跨域的 </span>
</span><span class='line'><span class="cm"> * 1.document.domain = &#39;a.com&#39;;</span>
</span><span class='line'><span class="cm"> * 2.服务器代理： XMLHttpRequest代理文件</span>
</span><span class='line'><span class="cm"> * 3.script标签：jsonp</span>
</span><span class='line'><span class="cm"> * 4.location.hash </span>
</span><span class='line'><span class="cm"> * 5.window.name</span>
</span><span class='line'><span class="cm"> * 6.flash</span>
</span><span class='line'><span class="cm"> * 7.html5 postMessage--</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">createJs</span><span class="p">(</span><span class="nx">sUrl</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">oScript</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">oScript</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s1">&#39;text/javascript&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">oScript</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="nx">sUrl</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;head&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">oScript</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// createJs(&#39;jsonp.js&#39;);</span>
</span><span class='line'><span class="nx">createJs</span><span class="p">(</span><span class="s1">&#39;jsonp.js?callback=fn&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 在本页面写一个与fn一样的函数接受数据，</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">box</span><span class="p">(</span><span class="nx">json</span><span class="p">){</span>
</span><span class='line'>    <span class="nx">alert</span><span class="p">(</span><span class="nx">json</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span><span class="c1">//ok</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="err">##</span> <span class="nx">jsonp</span><span class="p">.</span><span class="nx">js</span><span class="err">文件</span>
</span><span class='line'>
</span><span class='line'><span class="nx">box</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span><span class="s1">&#39;ok&#39;</span><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<h4>js闭包</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 函数嵌套函数，内部函数可引用外部函数的参数和变量，参数和变量不会被垃圾回收机制所收回</span>
</span><span class='line'><span class="cm"> * 好处：</span>
</span><span class='line'><span class="cm"> *      1.希望一个变量长期驻扎在内存当中</span>
</span><span class='line'><span class="cm"> *      2.避免全局变量的污染</span>
</span><span class='line'><span class="cm"> *      3.私有成员的存在</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * 需要注意的地方</span>
</span><span class='line'><span class="cm"> *      1.IE下会引发内存泄漏</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">oLi</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;li&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">len</span><span class="o">=</span><span class="nx">oLi</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">len</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>        <span class="nx">oLi</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">onclick</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="c1">//3</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 方法一</span>
</span><span class='line'>        <span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span>
</span><span class='line'>            <span class="nx">oLi</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">onclick</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>                <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">i</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">})(</span><span class="nx">i</span><span class="p">);</span>
</span><span class='line'>        <span class="c1">// 方法二</span>
</span><span class='line'>        <span class="nx">oLi</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">onclick</span> <span class="o">=</span> <span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span>
</span><span class='line'>            <span class="k">return</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>                <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">})(</span><span class="nx">i</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// IE下会引发内存泄漏</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">oDiv</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;div1&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">oDiv</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>        <span class="nx">alert</span><span class="p">(</span><span class="nx">oDiv</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">// 防止内存泄漏</span>
</span><span class='line'>    <span class="c1">// 方法一</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nx">onunload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>        <span class="nx">oDiv</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">// 方法二</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">id</span> <span class="o">=</span> <span class="nx">oDiv</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">oDiv</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>        <span class="nx">alert</span><span class="p">(</span><span class="nx">id</span><span class="p">);</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>    <span class="nx">oDiv</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>本地存储</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">value=</span><span class="s">&quot;设置&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">value=</span><span class="s">&quot;获取&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">value=</span><span class="s">&quot;删除&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * storage 存储</span>
</span><span class='line'><span class="cm"> * sessionStorage </span>
</span><span class='line'><span class="cm"> *  -session临时会话，从页面打开到页面关闭的时间段</span>
</span><span class='line'><span class="cm"> *  -窗口的临时存储，页面关闭，本地存储消失</span>
</span><span class='line'><span class="cm"> *  -session同窗口才可以，例子：iframe操作</span>
</span><span class='line'><span class="cm"> * localStorage</span>
</span><span class='line'><span class="cm"> *  -永久存储（可以手动删除数据）</span>
</span><span class='line'><span class="cm"> * storage的特点</span>
</span><span class='line'><span class="cm"> *  -存储量限制（5M）</span>
</span><span class='line'><span class="cm"> *  -客户端完成，不会请求服务器处理</span>
</span><span class='line'><span class="cm"> *  -sessionStorage数据是不共享、localStorage共享</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="c1">// var aInput = document.querySelectorAll(&#39;input&#39;);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// aInput[0].onclick = function(){</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//  // sessionStorage:临时性存储</span>
</span><span class='line'>    <span class="c1">//  // localStorage:永久性存储</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//  // window.sessionStorage.setItem(&#39;name&#39;, aInput[3].value);</span>
</span><span class='line'>    <span class="c1">//  window.localStorage.setItem(&#39;name&#39;, aInput[3].value);</span>
</span><span class='line'>    <span class="c1">// }</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// aInput[1].onclick = function(){</span>
</span><span class='line'>    <span class="c1">//  // alert(window.sessionStorage.getItem(&#39;name&#39;));</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//  alert(window.localStorage.getItem(&#39;name&#39;));//通过key来获取到相应的value</span>
</span><span class='line'>    <span class="c1">// }</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// aInput[2].onclick = function(){</span>
</span><span class='line'>    <span class="c1">//  window.localStorage.removeItem(&#39;name&#39;);//通过key来删除相应的value</span>
</span><span class='line'>    <span class="c1">//  // window.localStorage.clear();//删除全部数据</span>
</span><span class='line'>    <span class="c1">// }</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// window.addEventListener(&#39;storage&#39;,function(ev){</span>
</span><span class='line'>    <span class="c1">//  // 当数据有修改或删除的情况下，就会触发storage事件</span>
</span><span class='line'>    <span class="c1">//  // 在对数据进行修改的窗口对象上是不会触发的</span>
</span><span class='line'>    <span class="c1">//  //当前页面的事件不会触发</span>
</span><span class='line'>    <span class="c1">//  // alert(1234);</span>
</span><span class='line'>    <span class="c1">//  console.log(ev.key);</span>
</span><span class='line'>    <span class="c1">//  console.log(ev.newValue);</span>
</span><span class='line'>    <span class="c1">//  console.log(ev.oldValue);</span>
</span><span class='line'>    <span class="c1">//  console.log(ev.storageArea);</span>
</span><span class='line'>    <span class="c1">//  console.log(ev.url);</span>
</span><span class='line'>    <span class="c1">// },false)</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>枚举算法</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- &lt;p style=&quot;margin-left:35px;&quot;&gt;</span>
</span><span class='line'><span class="c">    &lt;span&gt;枚&lt;/span&gt;</span>
</span><span class='line'><span class="c">    &lt;span&gt;举&lt;/span&gt;</span>
</span><span class='line'><span class="c">    &lt;span&gt;算&lt;/span&gt;</span>
</span><span class='line'><span class="c">    &lt;span&gt;法&lt;/span&gt;</span>
</span><span class='line'><span class="c">    &lt;span&gt;题&lt;/span&gt;</span>
</span><span class='line'><span class="c">    &lt;/p&gt;</span>
</span><span class='line'><span class="c">    &lt;p&gt;*    &lt;span style=&quot;position: absolute;top: 30px; left: 180px;&quot;&gt;枚&lt;/span&gt;&lt;/p&gt;</span>
</span><span class='line'><span class="c">    &lt;hr /&gt;</span>
</span><span class='line'><span class="c">    &lt;p style=&quot;margin-left: 35px;&quot;&gt;</span>
</span><span class='line'><span class="c">    &lt;span&gt;题&lt;/span&gt;</span>
</span><span class='line'><span class="c">    &lt;span&gt;题&lt;/span&gt;</span>
</span><span class='line'><span class="c">    &lt;span&gt;题&lt;/span&gt;</span>
</span><span class='line'><span class="c">    &lt;span&gt;题&lt;/span&gt;</span>
</span><span class='line'><span class="c">    &lt;span&gt;题&lt;/span&gt;</span>
</span><span class='line'><span class="c">    &lt;/p&gt; --&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;javascript:;&quot;</span><span class="nt">&gt;</span>北京<span class="nt">&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;javascript:;&quot;</span><span class="nt">&gt;</span>上海<span class="nt">&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;javascript:;&quot;</span><span class="nt">&gt;</span>深圳<span class="nt">&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;javascript:;&quot;</span><span class="nt">&gt;</span>广州<span class="nt">&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;javascript:;&quot;</span><span class="nt">&gt;</span>天津<span class="nt">&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;javascript:;&quot;</span><span class="nt">&gt;</span>重庆<span class="nt">&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;javascript:;&quot;</span><span class="nt">&gt;</span>杭州<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;ul</span> <span class="na">id=</span><span class="s">&quot;ul1&quot;</span><span class="nt">&gt;&lt;/ul&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 枚举算法：用for来从众多的候选答案中，找出正确的解</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>        <span class="c1">// var aP = document.getElementsByTagName(&#39;p&#39;);</span>
</span><span class='line'>        <span class="c1">// var aSpan1 = aP[0].getElementsByTagName(&#39;span&#39;);</span>
</span><span class='line'>        <span class="c1">// var aSpan2 = aP[1].getElementsByTagName(&#39;span&#39;);</span>
</span><span class='line'>        <span class="c1">// var aSpan3 = aP[2].getElementsByTagName(&#39;span&#39;);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// for(var i=1;i&lt;=9;i++){</span>
</span><span class='line'>        <span class="c1">//  for(var j=0;j&lt;=9;j++){</span>
</span><span class='line'>        <span class="c1">//      for(var k=0;k&lt;=9;k++){</span>
</span><span class='line'>        <span class="c1">//          for(var m=0;m&lt;=9;m++){</span>
</span><span class='line'>        <span class="c1">//              for(var n=0;n&lt;=9;n++){</span>
</span><span class='line'>        <span class="c1">//                  var a = 10000*i + 1000*j + 100*k + 10*m + n;</span>
</span><span class='line'>        <span class="c1">//                  var b = i;</span>
</span><span class='line'>        <span class="c1">//                  var c = n*11111;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//                  if(a*b==c){</span>
</span><span class='line'>        <span class="c1">//                      aSpan1[0].innerHTML = i;</span>
</span><span class='line'>        <span class="c1">//                      aSpan1[1].innerHTML = j;</span>
</span><span class='line'>        <span class="c1">//                      aSpan1[2].innerHTML = k;</span>
</span><span class='line'>        <span class="c1">//                      aSpan1[3].innerHTML = m;</span>
</span><span class='line'>        <span class="c1">//                      aSpan1[4].innerHTML = n;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//                      aSpan2[0].innerHTML = i;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//                      for(var x=0;x&lt;aSpan3.length;x++){</span>
</span><span class='line'>        <span class="c1">//                          aSpan3[x].innerHTML = n;</span>
</span><span class='line'>        <span class="c1">//                      }</span>
</span><span class='line'>        <span class="c1">//                  }</span>
</span><span class='line'>        <span class="c1">//              }</span>
</span><span class='line'>        <span class="c1">//          }</span>
</span><span class='line'>        <span class="c1">//      }</span>
</span><span class='line'>        <span class="c1">//  }</span>
</span><span class='line'>        <span class="c1">// }</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">aA</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">oUl</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;ul1&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">aLi</span> <span class="o">=</span> <span class="nx">oUl</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;li&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">aA</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>            <span class="nx">aA</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">onclick</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span><span class="nx">mj</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">)){</span>
</span><span class='line'>                    <span class="kd">var</span> <span class="nx">oLi</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;li&#39;</span><span class="p">);</span>
</span><span class='line'>                    <span class="nx">oLi</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">;</span>
</span><span class='line'>                    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">aLi</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span>
</span><span class='line'>                        <span class="nx">oUl</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">oLi</span><span class="p">);</span>
</span><span class='line'>                    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>                        <span class="nx">oUl</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">oLi</span><span class="p">,</span> <span class="nx">aLi</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>                    <span class="nx">mj2</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">function</span> <span class="nx">mj</span><span class="p">(</span><span class="nx">text</span><span class="p">){</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">result</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">aLi</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span><span class="nx">aLi</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">innerHTML</span> <span class="o">==</span> <span class="nx">text</span><span class="p">){</span>
</span><span class='line'>                    <span class="nx">result</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">return</span> <span class="nx">result</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">function</span> <span class="nx">mj2</span><span class="p">(</span><span class="nx">text</span><span class="p">){</span>
</span><span class='line'>            <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">aLi</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span><span class="nx">aLi</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">innerHTML</span> <span class="o">==</span> <span class="nx">text</span><span class="p">){</span>
</span><span class='line'>                    <span class="nx">oUl</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">aLi</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span> <span class="nx">aLi</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>跨文档消息通信</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nf">#div1</span><span class="p">{</span>
</span><span class='line'>    <span class="k">width</span><span class="o">:</span> <span class="m">300px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span> <span class="m">30px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">border</span><span class="o">:</span> <span class="m">1px</span> <span class="k">solid</span> <span class="m">#000</span><span class="p">;</span>
</span><span class='line'>    <span class="k">position</span><span class="o">:</span> <span class="k">relative</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nf">#div2</span><span class="p">{</span>
</span><span class='line'>    <span class="k">width</span><span class="o">:</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span> <span class="m">30px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">background-color</span><span class="o">:</span> <span class="m">#ccc</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nf">#div3</span><span class="p">{</span>
</span><span class='line'>    <span class="k">position</span><span class="o">:</span> <span class="k">absolute</span><span class="p">;</span>
</span><span class='line'>    <span class="k">width</span><span class="o">:</span> <span class="m">300px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span> <span class="m">30px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">line-height</span><span class="o">:</span> <span class="m">30px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">text-align</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'>    <span class="k">left</span><span class="o">:</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">top</span><span class="o">:</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!-- &lt;input type=&quot;button&quot; id=&quot;btn&quot;&gt; --&gt;</span>
</span><span class='line'><span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;file&quot;</span> <span class="na">id=</span><span class="s">&quot;myFile&quot;</span> <span class="nt">/&gt;&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">value=</span><span class="s">&quot;上传&quot;</span> <span class="na">id=</span><span class="s">&quot;btn&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;div1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;div2&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;div3&quot;</span><span class="nt">&gt;</span>0.00<span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 在标准浏览器下，XMLHttpRequest对象已经是升级版本，支持了更多的特性，可以跨域</span>
</span><span class='line'><span class="cm"> * 了，但是，如果想实现跨域请求，还需要后端的相关配合才可以（服务端设置请求头head</span>
</span><span class='line'><span class="cm"> * er(&#39;Access-Control-Allow-Origin:http://www.a.om&#39;);//</span>
</span><span class='line'><span class="cm"> * 允许访问该域的资源） </span>
</span><span class='line'><span class="cm"> * XMLHttpRequest: 增加了很多功能，他也不推荐使用onreadystatechange这个事件</span>
</span><span class='line'><span class="cm"> * 来监听，推荐使用onload</span>
</span><span class='line'><span class="cm"> * XDomainRequest:IE如果想实现跨域请求，则需要使用另外一个对象去实现</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// var oBtn = document.getElementById(&#39;btn&#39;);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// oBtn.onclick = function(){</span>
</span><span class='line'>    <span class="c1">//  var xhr = new XMLHttpRequest();</span>
</span><span class='line'>    <span class="c1">//  xhr.onreadystatechange = function(){</span>
</span><span class='line'>    <span class="c1">//      if(xhr.readyState == 4 &amp;&amp; xhr.status == 200){</span>
</span><span class='line'>    <span class="c1">//          alert(xhr.responseText);</span>
</span><span class='line'>    <span class="c1">//      }</span>
</span><span class='line'>    <span class="c1">//  }</span>
</span><span class='line'>    <span class="c1">//  xhr.open(&#39;get&#39;, &#39;http://www.b.com/ajax.php&#39;, true);</span>
</span><span class='line'>    <span class="c1">//  xhr.send();</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//  var oXDomainRequest = new XDomainRequest();</span>
</span><span class='line'>    <span class="c1">//  oXDomainRequest.onload = function(){</span>
</span><span class='line'>    <span class="c1">//      alert(this.responseText);</span>
</span><span class='line'>    <span class="c1">//  }</span>
</span><span class='line'>    <span class="c1">//  oXDomainRequest.open(&#39;get&#39;, &#39;http://www.b.com/ajax.php&#39;, true);</span>
</span><span class='line'>    <span class="c1">//  oXDomainRequest.send();</span>
</span><span class='line'>    <span class="c1">// }</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">oBtn</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;btn&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">oMyFile</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;myFile&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">oDiv1</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;div1&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">oDiv2</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;div2&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">oDiv3</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;div3&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">oBtn</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>        <span class="c1">// alert(oMyFile.value);//获取到的是file控件的value值，这个内容是现实给你看的文字，不是我们选择的文件</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// oMyFile.files file控件中选择的的文件列表对象</span>
</span><span class='line'>        <span class="c1">// console.log(oMyFile.files, oMyFile.files[0]);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 我们是要通过ajax把oMyFile.files[0]数据发送给后端</span>
</span><span class='line'>        <span class="c1">// for(var attr in oMyFile.files[0]){</span>
</span><span class='line'>        <span class="c1">//  console.log(attr + &#39; : &#39; + oMyFile.files[0][attr])</span>
</span><span class='line'>        <span class="c1">// }</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">xhr</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">();</span>
</span><span class='line'>        <span class="nx">xhr</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>            <span class="c1">// alert(1);</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">d</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">responseText</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">msg</span> <span class="o">+</span> <span class="s1">&#39; : &#39;</span> <span class="o">+</span> <span class="nx">d</span><span class="p">.</span><span class="nx">url</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">oUpload</span> <span class="o">=</span> <span class="nx">xhr</span><span class="p">.</span><span class="nx">upload</span><span class="p">;</span>
</span><span class='line'>        <span class="nx">oUpload</span><span class="p">.</span><span class="nx">onprogress</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ev</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// console.log(ev.total + &#39; : &#39; + ev.loaded);</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">iScale</span> <span class="o">=</span> <span class="p">(</span><span class="nx">ev</span><span class="p">.</span><span class="nx">loaded</span> <span class="o">/</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">total</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">oDiv2</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span> <span class="o">=</span> <span class="mi">300</span> <span class="o">*</span> <span class="nx">iScale</span> <span class="o">+</span> <span class="s1">&#39;px&#39;</span><span class="p">;</span>
</span><span class='line'>            <span class="nx">oDiv3</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">iScale</span> <span class="o">*</span> <span class="mi">100</span> <span class="o">+</span> <span class="s1">&#39;%&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="nx">xhr</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s1">&#39;post&#39;</span><span class="p">,</span> <span class="s1">&#39;post_file.php&#39;</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">xhr</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s1">&#39;X-Request-With&#39;</span><span class="p">,</span> <span class="s1">&#39;XMLHttpRequest&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">oFormData</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FormData</span><span class="p">();</span>
</span><span class='line'>        <span class="nx">oFormData</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;file&#39;</span><span class="p">,</span> <span class="nx">oMyFile</span><span class="p">.</span><span class="nx">files</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span><span class='line'>        <span class="nx">xhr</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nx">oFormData</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>地理信息</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;http://api.map.baidu.com/api?v=2.0&amp;ak=需要申请&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
</span><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">oInput</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;input1&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">oT</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;t1&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">timer</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">oInput</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>        <span class="c1">// 单次定位请求</span>
</span><span class='line'>        <span class="c1">// navigator.geolocation.getCurrentPosition(function(position){</span>
</span><span class='line'>        <span class="c1">//  oT.value += &#39;经度：&#39; + position.coords.longitude + &#39;\n&#39;;</span>
</span><span class='line'>        <span class="c1">//  oT.value += &#39;维度：&#39; + position.coords.latitude + &#39;\n&#39;;</span>
</span><span class='line'>        <span class="c1">//  oT.value += &#39;准确度：&#39; + position.coords.accuracy + &#39;\n&#39;;</span>
</span><span class='line'>        <span class="c1">//  oT.value += &#39;海拔：&#39; + position.coords.altitude + &#39;\n&#39;;</span>
</span><span class='line'>        <span class="c1">//  oT.value += &#39;海拔准确度：&#39; + position.coords.altitudeAcuracy + &#39;\n&#39;;</span>
</span><span class='line'>        <span class="c1">//  oT.value += &#39;行进方向：&#39; + position.coords.heading + &#39;\n&#39;;</span>
</span><span class='line'>        <span class="c1">//  oT.value += &#39;地面速度：&#39; + position.coords.speed + &#39;\n&#39;;</span>
</span><span class='line'>        <span class="c1">//  oT.value += &#39;时间戳：&#39; + new Date(position.timestamp) + &#39;\n&#39;;</span>
</span><span class='line'>        <span class="c1">// },function(err){</span>
</span><span class='line'>        <span class="c1">//  // 请求失败函数</span>
</span><span class='line'>        <span class="c1">//  // 失败编号： code</span>
</span><span class='line'>        <span class="c1">//  // 0：不包括其他错误编号中的错误</span>
</span><span class='line'>        <span class="c1">//  // 1:用户拒绝浏览器获取位置信息</span>
</span><span class='line'>        <span class="c1">//  // 2:尝试获取用户信息，但失败了</span>
</span><span class='line'>        <span class="c1">//  // 3:设置了timeout值，获取位置超时了</span>
</span><span class='line'>        <span class="c1">//  console.log(err.code);</span>
</span><span class='line'>        <span class="c1">//  },{//数据收集：json的形式</span>
</span><span class='line'>        <span class="c1">//  enableHighAcuracy: true,//更精确的查找，默认false</span>
</span><span class='line'>        <span class="c1">//  timeout: 5000,//获取位置允许最长时间，默认infinity</span>
</span><span class='line'>        <span class="c1">//  maximumAge: 5000//位置可以缓存的最大时间，默认0</span>
</span><span class='line'>        <span class="c1">// });</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 监听位置变化，移动端使用</span>
</span><span class='line'>        <span class="c1">// timer = navigator.geolocation.watchPosition(function(position){</span>
</span><span class='line'>        <span class="c1">//  oT.value += &#39;经度：&#39; + position.coords.longitude + &#39;\n&#39;;</span>
</span><span class='line'>        <span class="c1">//  oT.value += &#39;维度：&#39; + position.coords.latitude + &#39;\n&#39;;</span>
</span><span class='line'>        <span class="c1">//  oT.value += &#39;准确度：&#39; + position.coords.accuracy + &#39;\n&#39;;</span>
</span><span class='line'>        <span class="c1">//  oT.value += &#39;海拔：&#39; + position.coords.altitude + &#39;\n&#39;;</span>
</span><span class='line'>        <span class="c1">//  oT.value += &#39;海拔准确度：&#39; + position.coords.altitudeAcuracy + &#39;\n&#39;;</span>
</span><span class='line'>        <span class="c1">//  oT.value += &#39;行进方向：&#39; + position.coords.heading + &#39;\n&#39;;</span>
</span><span class='line'>        <span class="c1">//  oT.value += &#39;地面速度：&#39; + position.coords.speed + &#39;\n&#39;;</span>
</span><span class='line'>        <span class="c1">//  oT.value += &#39;时间戳：&#39; + new Date(position.timestamp) + &#39;\n&#39;;</span>
</span><span class='line'>        <span class="c1">// },function(err){</span>
</span><span class='line'>        <span class="c1">//  // 请求失败函数</span>
</span><span class='line'>        <span class="c1">//  // 失败编号： code</span>
</span><span class='line'>        <span class="c1">//  // 0：不包括其他错误编号中的错误</span>
</span><span class='line'>        <span class="c1">//  // 1:用户拒绝浏览器获取位置信息</span>
</span><span class='line'>        <span class="c1">//  // 2:尝试获取用户信息，但失败了</span>
</span><span class='line'>        <span class="c1">//  // 3:设置了timeout值，获取位置超时了</span>
</span><span class='line'>        <span class="c1">//  alert(err.code);</span>
</span><span class='line'>        <span class="c1">//  navigator.geolocation.clearWatch(timer);</span>
</span><span class='line'>        <span class="c1">//  },{//数据收集：json的形式</span>
</span><span class='line'>        <span class="c1">//  enableHighAcuracy: true,//更精确的查找，默认false</span>
</span><span class='line'>        <span class="c1">//  timeout: 5000,//获取位置允许最长时间，默认infinity</span>
</span><span class='line'>        <span class="c1">//  maximumAge: 5000//位置可以缓存的最大时间，默认0</span>
</span><span class='line'>        <span class="c1">//  frequency: 1000// 更新的频率</span>
</span><span class='line'>        <span class="c1">// })</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="nx">navigator</span><span class="p">.</span><span class="nx">geolocation</span><span class="p">.</span><span class="nx">getCurrentPosition</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">position</span><span class="p">){</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="nx">position</span><span class="p">.</span><span class="nx">coords</span><span class="p">.</span><span class="nx">longitude</span><span class="p">;</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">y</span> <span class="o">=</span> <span class="nx">position</span><span class="p">.</span><span class="nx">coords</span><span class="p">.</span><span class="nx">latitude</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">BMap</span><span class="p">.</span><span class="nx">Map</span><span class="p">(</span><span class="s2">&quot;div1&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">pt</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">BMap</span><span class="p">.</span><span class="nx">Point</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">map</span><span class="p">.</span><span class="nx">centerAndZoom</span><span class="p">(</span><span class="nx">pt</span><span class="p">,</span> <span class="mi">14</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">map</span><span class="p">.</span><span class="nx">enableScrollWheelZoom</span><span class="p">();</span>
</span><span class='line'>            <span class="c1">// var marker1 = new BMap.Marker(pt);//创建标注</span>
</span><span class='line'>            <span class="c1">// map.addOverlay(marker1);</span>
</span><span class='line'>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">myIcon</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">BMap</span><span class="p">.</span><span class="nx">Icon</span><span class="p">(</span><span class="s2">&quot;me.JPG&quot;</span><span class="p">,</span> <span class="k">new</span> <span class="nx">BMap</span><span class="p">.</span><span class="nx">Size</span><span class="p">(</span><span class="mi">30</span><span class="p">,</span><span class="mi">30</span><span class="p">));</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">marker2</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">BMap</span><span class="p">.</span><span class="nx">Marker</span><span class="p">(</span><span class="nx">pt</span><span class="p">,</span> <span class="p">{</span><span class="nx">icon</span><span class="o">:</span> <span class="nx">myIcon</span><span class="p">});</span>
</span><span class='line'>            <span class="nx">map</span><span class="p">.</span><span class="nx">addOverlay</span><span class="p">(</span><span class="nx">marker2</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">opts</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">width</span><span class="o">:</span> <span class="mi">200</span><span class="p">,</span>  <span class="c1">//信息窗口宽度</span>
</span><span class='line'>                <span class="nx">height</span><span class="o">:</span> <span class="mi">60</span><span class="p">,</span>  <span class="c1">//信息窗口高度</span>
</span><span class='line'>                <span class="nx">title</span><span class="o">:</span> <span class="s2">&quot;我住的地方&quot;</span> <span class="c1">//信息窗口标题</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">infoWindow</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">BMap</span><span class="p">.</span><span class="nx">InfoWindow</span><span class="p">(</span><span class="s2">&quot;我的大本营&quot;</span><span class="p">,</span> <span class="nx">opts</span><span class="p">);</span>  <span class="c1">//创建信息窗口对象</span>
</span><span class='line'>            <span class="nx">map</span><span class="p">.</span><span class="nx">openInfoWindow</span><span class="p">(</span><span class="nx">infoWindow</span><span class="p">,</span> <span class="nx">pt</span><span class="p">);</span> <span class="c1">//开启窗口信息</span>
</span><span class='line'>        <span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">){</span>
</span><span class='line'>            <span class="nx">alert</span><span class="p">(</span><span class="nx">err</span><span class="p">.</span><span class="nx">code</span><span class="p">);</span>
</span><span class='line'>        <span class="p">})</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Blog]]></title>
    <link href="http://xlingyun.github.io/blog/20170422/first-blog/"/>
    <updated>2017-04-22T02:37:11+08:00</updated>
    <id>http://xlingyun.github.io/blog/20170422/first-blog</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装Octopress步骤]]></title>
    <link href="http://xlingyun.github.io/blog/20170421/post-tabqie-huan/"/>
    <updated>2017-04-21T19:23:53+08:00</updated>
    <id>http://xlingyun.github.io/blog/20170421/post-tabqie-huan</id>
    <content type="html"><![CDATA[<h4>安装Octopress步骤</h4>

<h5>Ruby等依赖安装</h5>

<blockquote><p>由于Jekyll和octopress都是ruby写的，会有诸多ruby依赖，建议切换ruby源唯国内源。对于git版本没有太大要求。
查看ruby版本<code>ruby -v</code>
安装bundler bundler可以自动解决依赖，安装方法：<code>gem install bundler</code>,建议国内用户切换gem源为国内源，方法如下：</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem source -r https://rubygems.org/ # 删除官方源
</span><span class='line'>gem source -a https://ruby.taobao.org/ #添加淘宝源</span></code></pre></td></tr></table></div></figure>


<blockquote><p> 查看当前源：<code>gem source -l</code></p></blockquote>

<h5>clone网站repo</h5>

<blockquote><p>设置git</p></blockquote>

<pre><code class="`"> git config --global user.name "name"
 git config --global user.email "emailaddress"
</code></pre>

<blockquote><p>生成ssh key：</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-keygen -t rsa -C "emailaddress"</span></code></pre></td></tr></table></div></figure>


<blockquote><p>按3个回车，密码为空，复制~/.ssh/id_rsa.pub的内容，添加到GitHub账户中，然后clone网站repo</p></blockquote>

<h5>octopress安装</h5>

<blockquote><p>octopress的安装也比较简单，下载源码后会有Gemfile文件来指示所有依赖，使用<code>bundle</code>即可，下载源码:</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress</span></code></pre></td></tr></table></div></figure>


<blockquote><p>进入octopress文件夹，使用bundle自动安装octopress，<code>bundle install</code>会自动安装所有octopress及其所有依赖。</p>

<p>执行如下命令安装默认主题</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install </span></code></pre></td></tr></table></div></figure>


<p>
所谓rake就是ruby make的缩写。
- 执行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>在浏览器内输入<code>http://localhost:4000</code>，即可看到我们搭建完成的博客</p>

<h5>部署到GitHub</h5>

<p>tab切换</p>

<h2>标题一</h2>

<h2>标题二</h2>

<h6>标题六</h6>

<ul>
<li>列表项1</li>
<li>列表项2</li>
<li>列表项3</li>
<li>列表项4</li>
<li><p>无序列表5</p></li>
<li><p>无序列表</p></li>
<li><p>无序列表</p></li>
<li><p>有序列表</p></li>
<li>有序列表</li>
</ul>


<blockquote><p>引用的一段名言</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Css3的结构与布局]]></title>
    <link href="http://xlingyun.github.io/blog/20170409/cssde-jie-gou-yu-bu-ju/"/>
    <updated>2017-04-09T15:40:39+08:00</updated>
    <id>http://xlingyun.github.io/blog/20170409/cssde-jie-gou-yu-bu-ju</id>
    <content type="html"><![CDATA[<h4>1.自适应内部元素</h4>

<p>在css中，不给元素一个height值时，元素会自适应其内部的元素高度，有时我们想让元素的宽度也达到此效果，应用场景如下。</p>

<p>如下当前的这种布局，想要改成最外层的div的宽度由当前的图片撑开的效果，这时就要用到min-content这个属性值。</p>

<p><img src="http://oot79f1a9.bkt.clouddn.com/QQ20170423-165711.png" alt="http://oot79f1a9.bkt.clouddn.com/QQ20170423-165711.png" /></p>

<p>css代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">div</span> <span class="p">{</span>
</span><span class='line'>    <span class="c">/*只需要给最层的div的宽度值设置成min-content即可 */</span>
</span><span class='line'>    <span class="k">width</span><span class="o">:</span> <span class="n">min</span><span class="o">-</span><span class="k">content</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>最终效果：</p>

<p><img src="http://oot79f1a9.bkt.clouddn.com/QQ20170423-165634.png" alt="http://oot79f1a9.bkt.clouddn.com/QQ20170423-165634.png" /></p>

<p>min-content将解析这个容器内部最大的不可断行元素的宽度（即最宽的单词，图片或具有固定宽度的盒元素）</p>

<p>张鑫旭有一篇文章对这个属性做了详细的讲解，地址如下：</p>

<p><a href="[http://www.zhangxinxu.com/wordpress/2016/05/css3-width-max-contnet-min-content-fit-content/">http://www.zhangxinxu.com/wordpress/2016/05/css3-width-max-contnet-min-content-fit-content/</a></p>

<h4>2.精确的控制表格的列宽</h4>

<p>在使用表格布局时，当表格的内容不确定时，布局很难预测，因为表格的列宽是根据它的内容进行计算的，即使显示的设置了width，也不会生效，还是会根据它的内容生成宽度。会根据加载的内容不停的重绘，直到加载完。</p>

<p>平时生成的表格如下：</p>

<p> <img src="http://oot79f1a9.bkt.clouddn.com/QQ20170423-171957.png" alt="http://oot79f1a9.bkt.clouddn.com/QQ20170423-171957.png" /></p>

<p>为了让设置的宽度生效，并且能让过多的文字省略号显示，解决办法就是使用table-layout: fixed这个样式</p>

<p>代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">table</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">table-layout</span><span class="o">:</span> <span class="k">fixed</span><span class="p">;</span>
</span><span class='line'>    <span class="k">width</span><span class="o">:</span> <span class="m">100%</span><span class="p">;</span> <span class="c">/*必须指定一个width，否则不生效*/</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>最终的效果如下：</p>

<p><img src="http://oot79f1a9.bkt.clouddn.com/QQ20170423-174632.png" alt="http://oot79f1a9.bkt.clouddn.com/QQ20170423-174632.png" /></p>

<h4>3.根据兄弟元素的数量设置样式</h4>

<p>在一些应用场景中，我们可能需要根据元素的数量来设置样式，比如说列表越来越长的时候，我们可能需要调整间隔或者大小，来减少长度，提升用户的体验</p>

<p>例如当列表项中共有4项的时候，选中所有列表，可以通过使用scss这种预处理器，编写mixin</p>

<p>代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="c">/*定义mixin*/</span>
</span><span class='line'><span class="k">@mixin</span> <span class="nt">n-items</span><span class="o">($</span><span class="nt">n</span><span class="o">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nd">:first-child:nth-last-child</span><span class="o">(</span><span class="err">#</span><span class="p">{</span><span class="err">$</span><span class="n">n</span><span class="p">}</span><span class="o">),</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nd">:first-child:nth-last-child</span><span class="o">(</span><span class="err">#</span><span class="p">{</span><span class="err">$</span><span class="n">n</span><span class="p">}</span><span class="o">)</span> <span class="o">~</span> <span class="o">&amp;</span> <span class="p">{</span>
</span><span class='line'>    <span class="o">@</span><span class="k">content</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c">/*调用方法*/</span>
</span><span class='line'><span class="nt">li</span> <span class="p">{</span>
</span><span class='line'><span class="c">/*当列表正好包含四项时 命中所有列表项*/</span>
</span><span class='line'><span class="c">/*定义样式*/</span>
</span><span class='line'>  <span class="o">@</span><span class="n">include</span> <span class="n">n</span><span class="o">-</span><span class="n">items</span><span class="p">(</span><span class="m">4</span><span class="p">)</span> <span class="err">{</span>
</span><span class='line'>    <span class="k">width</span><span class="o">:</span> <span class="m">40px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span> <span class="m">100px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">background</span><span class="o">:</span> <span class="nb">red</span><span class="p">;</span>
</span><span class='line'>    <span class="k">float</span><span class="o">:</span> <span class="k">left</span><span class="p">;</span>
</span><span class='line'>    <span class="k">margin</span><span class="o">:</span> <span class="m">10px</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>效果如下：</p>

<p> <img src="http://oot79f1a9.bkt.clouddn.com/QQ20170423-173150.png" alt="http://oot79f1a9.bkt.clouddn.com/QQ20170423-173150.png" /></p>

<h4>4.根据兄弟元素的数量范围匹配元素</h4>

<p>应该场景同上，解决办法也是编写mixin
例如，当列表的总数是4或者更多时，选中所有列表项
代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="c">/*定义mixin*/</span>
</span><span class='line'><span class="k">@mixin</span> <span class="nt">n-items</span><span class="o">($</span><span class="nt">n</span><span class="o">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c">/*当列表的总数是4或者更多时，选中所有列表项*/</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nd">:first-child:nth-last-child</span><span class="o">(</span><span class="err">#</span><span class="p">{</span><span class="err">$</span><span class="n">n</span> <span class="o">+</span> <span class="m">4</span><span class="p">}</span><span class="o">),</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nd">:first-child:nth-last-child</span><span class="o">(</span><span class="err">#</span><span class="p">{</span><span class="err">$</span><span class="n">n</span> <span class="o">+</span> <span class="m">4</span><span class="p">}</span><span class="o">)</span> <span class="o">~</span> <span class="o">&amp;</span> <span class="p">{</span>
</span><span class='line'>    <span class="o">@</span><span class="k">content</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">//</span> <span class="err">改写成</span> <span class="nt">-n</span> <span class="o">+</span> <span class="nt">4</span> <span class="err">表示列表中有</span><span class="nt">4</span><span class="err">个或者小于</span><span class="nt">4</span><span class="err">时，选中所有</span>
</span><span class='line'>
</span><span class='line'><span class="o">//</span> <span class="err">同理，如</span><span class="nt">2</span> <span class="err">～</span> <span class="nt">6</span><span class="err">时，设置</span> <span class="nt">n</span> <span class="o">+</span> <span class="nt">2</span> <span class="o">~</span> <span class="nt">-n</span> <span class="o">+</span> <span class="nt">6</span>
</span><span class='line'><span class="k">@mixin</span> <span class="nt">n-items</span><span class="o">($</span><span class="nt">n</span><span class="o">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nd">:first-child:nth-last-child</span><span class="o">(</span><span class="err">#</span><span class="p">{</span><span class="err">$</span><span class="n">n</span> <span class="o">+</span> <span class="m">2</span><span class="p">}</span><span class="o">)</span><span class="nd">:nth-last-child</span><span class="o">(</span><span class="err">#</span><span class="p">{</span><span class="err">$</span> <span class="o">-</span><span class="n">n</span> <span class="o">+</span> <span class="m">6</span><span class="p">}</span><span class="o">),</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nd">:first-child:nth-last-child</span><span class="o">(</span><span class="err">#</span><span class="p">{</span><span class="err">$</span><span class="n">n</span> <span class="o">+</span> <span class="m">2</span><span class="p">}</span><span class="o">)</span><span class="nd">:nth-last-child</span><span class="o">(</span><span class="err">#</span><span class="p">{</span><span class="err">$</span> <span class="o">-</span><span class="n">n</span> <span class="o">+</span> <span class="m">6</span><span class="p">}</span><span class="o">)</span> <span class="o">~</span> <span class="o">&amp;</span> <span class="p">{</span>
</span><span class='line'>    <span class="o">@</span><span class="k">content</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>5.满幅的背景，定宽的内容</p>

<p>页面上有很多布局是那种内容是固定宽的，背景是占满整个视口的宽的，比如下面这种布局：</p>

<p><img src="http://oot79f1a9.bkt.clouddn.com/QQ20170423-173203.png" alt="http://oot79f1a9.bkt.clouddn.com/QQ20170423-173203.png" /></p>

<p>实现方式有很多种，一般我们实现的代码结构都是这种的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">&lt;</span><span class="nt">footer</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nt">div</span> <span class="nt">class</span><span class="o">=</span><span class="s2">&quot;wrapper&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;/</span><span class="nt">div</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nt">footer</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">/* css样式*/</span>
</span><span class='line'><span class="nt">footer</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">background</span><span class="o">:</span> <span class="s2">&quot;#333&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nc">.wrapper</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">max-width</span><span class="o">:</span> <span class="m">900px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">margin</span><span class="o">:</span> <span class="m">1em</span> <span class="k">auto</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中margin: 1em auto;就是为了让内容div居中，我们有一种更好的方式，只用一层DOM结构实现上面的布局，就是使用calc这个属性。</p>

<p>实现代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">&lt;</span><span class="nt">footer</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="c">/* 内容 */</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nt">footer</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">/* css样式*/</span>
</span><span class='line'><span class="nt">footer</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">background</span><span class="o">:</span> <span class="s2">&quot;#333&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="c">/* 当浏览器不支持calc的时候回退一下*/</span>
</span><span class='line'>    <span class="k">padding</span><span class="o">:</span> <span class="m">1em</span><span class="p">;</span>
</span><span class='line'>    <span class="k">padding</span><span class="o">:</span> <span class="m">1em</span> <span class="n">calc</span><span class="p">(</span><span class="m">50%</span> <span class="o">-</span> <span class="m">450px</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>原理：百分比是按照视口的宽度来解析的，所以即使里面的内容不设置宽，也会给里面的内容留出 450*2的空间，达到了之前设置 max-width: 900px;的效果。</p>

<h4>6.垂直居中</h4>

<p>在css中水平居中比较简单，对于行级元素，对它的父元素使用text-align: center;对于块级元素，就对它自身使用margin: auto;对于垂直居中比较难处理，目前的解决方法有：</p>

<h5>1.基于绝对定位的方法</h5>

<p>(1) 当元素是定宽高的时候：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">div</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">width</span><span class="o">:</span> <span class="m">200px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span> <span class="m">100px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">position</span><span class="o">:</span> <span class="k">absolute</span><span class="p">;</span>
</span><span class='line'>    <span class="k">top</span><span class="o">:</span> <span class="m">50%</span><span class="p">;</span>
</span><span class='line'>    <span class="k">left</span><span class="o">:</span> <span class="m">50%</span><span class="p">;</span>
</span><span class='line'>    <span class="k">margin-top</span><span class="o">:</span> <span class="m">-50px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">margin-left</span><span class="o">:</span> <span class="m">-100px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>通过calc代码可以简化成下面这样：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">div</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">width</span><span class="o">:</span> <span class="m">200px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span> <span class="m">100px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">position</span><span class="o">:</span> <span class="k">absolute</span><span class="p">;</span>
</span><span class='line'>    <span class="k">top</span><span class="o">:</span> <span class="n">calc</span><span class="p">(</span><span class="m">50%</span> <span class="o">-</span> <span class="m">50px</span><span class="p">);</span>
</span><span class='line'>    <span class="k">left</span><span class="o">:</span> <span class="n">calc</span><span class="p">(</span><span class="m">50%</span> <span class="o">-</span> <span class="m">100px</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>(2) 对于那些宽高不定的元素，实现方法如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">div</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">position</span><span class="o">:</span> <span class="k">absolute</span><span class="p">;</span>
</span><span class='line'>    <span class="k">top</span><span class="o">:</span> <span class="m">50%</span><span class="p">;</span>
</span><span class='line'>    <span class="k">left</span><span class="o">:</span> <span class="m">50%</span><span class="p">;</span>
</span><span class='line'>    <span class="n">transfrom</span><span class="o">:</span> <span class="n">translate</span><span class="p">(</span><span class="m">-50%</span><span class="o">,</span> <span class="m">-50%</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上方案也有一个弊端就是必须是绝对定位的元素。</p>

<h5>2.基于视口单位的方法</h5>

<p>css3中定义了一些视口相关的单位：
vw 是与视口宽度相关的。1vw 实际上表示视口宽度的1%，而不是100%。</p>

<p>同样，1vh表示视口高度的 1%
当视口宽度小于高度时，1vmin等于 1vw，否则等于 1vh。
当视口宽度大于高度时，1vmax等于 1vw，否则等于 1vh。
所以我们的垂直居中可以这样实现：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">div</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">width</span><span class="o">:</span> <span class="m">200px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">padding</span><span class="o">:</span> <span class="m">2px</span> <span class="m">4px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">margin</span><span class="o">:</span> <span class="m">50</span><span class="n">vh</span> <span class="k">auto</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">transform</span><span class="o">:</span> <span class="n">translateY</span><span class="p">(</span><span class="m">-50%</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">**</span><span class="err">注：这里不使用</span><span class="nt">50</span><span class="o">%</span><span class="err">，而是视口单位的原因是，</span><span class="nt">margin</span><span class="err">的百分比是以父元素的宽度作为解析基准的，不论是</span><span class="nt">margin-top</span> <span class="nt">or</span> <span class="nt">margin-left</span><span class="o">**</span>
</span></code></pre></td></tr></table></div></figure>


<p>这种的方法是有局限性的，只能用在视口中居中的场景。</p>

<h5>3.基于flex的方法</h5>

<p>这种应该算是最佳的解决办法：
实现方法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">body</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nt">div</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">margin</span><span class="o">:</span> <span class="k">auto</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>当使用flex布局时，使用margin: auto; 在水平和垂直方向都会居中。在不指定width的情况下，width: max-content;</p>

<p>flexbox还有一个公共就是可以将匿名的容器（就是那些没有被标签包住的文本节点）垂直居中：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">&lt;</span><span class="nt">div</span><span class="o">&gt;</span><span class="nt">text</span><span class="o">&lt;/</span><span class="nt">div</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">div</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">width</span><span class="o">:</span> <span class="m">100px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span> <span class="m">50px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>    <span class="n">align</span><span class="o">-</span><span class="n">items</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'>    <span class="k">justify</span><span class="o">-</span><span class="k">content</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>7.紧贴底部的页脚</p>

<p>具有块级样式的页脚，当页面内容足够长的时候，页脚会紧贴视口的底部；但是当页面内容的长度 &lt; 视口height - 页脚height的时候，页脚就会紧贴在内容的下面。一般的设计是给页脚一个固定的height，这种显然不健壮，在css3中有更好的解决方案。</p>

<p>（1） 最原始的固定高度的解决方案</p>

<p>html结构如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">&lt;</span><span class="nt">header</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nt">h1</span><span class="o">&gt;</span><span class="nt">hello</span><span class="o">&lt;/</span><span class="nt">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nt">header</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nt">main</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span><span class="nt">this</span> <span class="nt">is</span> <span class="o">...&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nt">main</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nt">footer</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span><span class="nt">Made</span> <span class="nt">in</span> <span class="o">...&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span><span class="nt">Made</span> <span class="nt">in</span> <span class="o">...&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nt">footer</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">header</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span> <span class="m">10px</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nt">footer</span> <span class="nt">p</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">line-height</span><span class="o">:</span> <span class="m">1.5px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">padding</span><span class="o">:</span> <span class="m">1px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">margin</span><span class="o">:</span> <span class="m">1px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>假设当前的页脚文字永远不会折行，可以计算当前的页脚的高度是：2 ＊ 行高 + 3 ＊ 段落垂直外边距 + 页脚垂直内边距 = 2 ＊ 1.5px + 3 ＊ 1px + 1px = 7px;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">main</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">min-height</span><span class="o">:</span> <span class="n">calc</span><span class="p">(</span><span class="m">100</span><span class="n">vh</span> <span class="o">-</span> <span class="m">7px</span> <span class="o">-</span> <span class="m">10px</span><span class="p">);</span>
</span><span class='line'>    <span class="c">/* 避免内边距或外边距对高度计算的影响 */</span>
</span><span class='line'>    <span class="k">border</span><span class="o">-</span><span class="n">sizing</span><span class="o">:</span> <span class="k">border</span><span class="o">-</span><span class="n">box</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>当header和main放在一个div里时，css样式可以直接写成 div{min-height: calc(100vh - 7px)};</p>

<p>这种方法的局限性是不允许文字折行，并且布局是这种简单的布局，并且每当页脚的尺寸变化时，都需要跟着调整min-height的值。</p>

<p>（2）基于flex的解决方案</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">body</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">display</span><span class="o">:</span> <span class="n">flex</span><span class="p">;</span>
</span><span class='line'>    <span class="n">flex</span><span class="o">-</span><span class="n">flow</span><span class="o">:</span> <span class="n">columm</span><span class="p">;</span>
</span><span class='line'>    <span class="k">min-height</span><span class="o">:</span> <span class="m">100</span><span class="n">vh</span><span class="p">;</span> <span class="c">/* 至少会占据整个视口的高度 */</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nt">main</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">flex</span><span class="o">:</span> <span class="m">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
